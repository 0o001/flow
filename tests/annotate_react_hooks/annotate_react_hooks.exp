>>> test.js (#changes: 20)
import * as React from 'react';
import {useState, useCallback} from 'react';

// null
{
  const [val, setValue] = useState<null | number>(null); // ANNOTATED
  setValue(1);
}
{
  const [val, setValue] = useState(null); // NOT ANNOTATED
}

// undefined
{
  const [val, setValue] = useState<void | number>(undefined); // ANNOTATED
  setValue(1);
}
{
  const [val, setValue] = useState(undefined); // NOT ANNOTATED
}

// Empty array
{
  const [val, setValue] = useState<Array<number>>([]); // ANNOTATED
  setValue([1]);
}
{
  const [val, setValue] = useState<Array<number>>([]); // ANNOTATED
  val.push(1);
}
{
  const [val, setValue] = useState([]); // NOT ANNOTATED
}

// Empty Set
{
  const [val, setValue] = useState(new Set<number>()); // ANNOTATED
  setValue(new Set([1, 2]));
}
{
  const [val, setValue] = useState(new Set<number>()); // ANNOTATED
  val.add(1);
}
{
  const [val, setValue] = useState(new Set()); // NOT ANNOTATED
}

// Empty Map
{
  const [val, setValue] = useState(new Map<string, number>()); // ANNOTATED
  setValue(new Map([["a", 1], ["b", 2]]));
}
{
  const [val, setValue] = useState(new Map<string, number>()); // ANNOTATED
  val.set("a", 1);
}
{
  const [val, setValue] = useState(new Map()); // NOT ANNOTATED
}

{
  let f = useCallback((a: string, b: number) => {}); // ANNOTATED
  f("", 0);
}
{
  let f = React.useCallback((a: string, b: number) => {}); // ANNOTATED
  f("", 0);
}
{
  let f = useCallback((a: string, b: number) => {}, []); // ANNOTATED
  f("", 0);
}
{
  let f = React.useCallback((a: string, b: number) => {}, []); // ANNOTATED
  f("", 0);
}
{
  let f = useCallback((a: void, b: void) => {}); // ANNOTATED
  f();
}
{
  let f = React.useCallback((a: void, b: void) => {}); // ANNOTATED
  f();
}
{
  let f = useCallback((a, b) => {}); // NOT ANNOTATED
}
{
  let f = React.useCallback((a, b) => {}); // NOT ANNOTATED
}

>>> Launching report...

Stats:
  Files changed:                            1
  Number of annotations added:             20
  Total size of annotations:               32

Errors:
  Missing annot./normalizer error:          4
  Validation Error:                         0
  Import Error:
    Loc source none:                        0
    Parsing heaps get ast error:            0
    Indeterminate module type:              0
    No matching export:                     0
  Serializer error:                         0
  Unsupported error kind:                   0

Warnings:
  Skipping arrow function:                  0
  Large type added:                         0
  Location unhandled:                       0
  Empty NoUpper:                            0
  Empty SomeKnownUpper:                     0

