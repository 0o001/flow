>>> test.js (#changes: 12)
import * as React from 'react';
import {useCallback} from "react";

{
  let f = useCallback((a: string, b: number) => {}); // ANNOTATED
  f("", 0);
}
{
  let f = React.useCallback((a: string, b: number) => {}); // ANNOTATED
  f("", 0);
}
{
  let f = useCallback((a: string, b: number) => {}, []); // ANNOTATED
  f("", 0);
}
{
  let f = React.useCallback((a: string, b: number) => {}, []); // ANNOTATED
  f("", 0);
}
{
  let f = useCallback((a: void, b: void) => {}); // ANNOTATED
  f();
}
{
  let f = React.useCallback((a: void, b: void) => {}); // ANNOTATED
  f();
}
{
  let f = useCallback((a, b) => {}); // NOT ANNOTATED
}
{
  let f = React.useCallback((a, b) => {}); // NOT ANNOTATED
}

>>> Launching report...

Stats:
  Files changed:                            1
  Number of annotations added:             12
  Total size of annotations:               12

Errors:
  Missing annot./normalizer error:          4
  Validation Error:                         0
  Import Error:
    Loc source none:                        0
    Parsing heaps get ast error:            0
    Indeterminate module type:              0
    No matching export:                     0
  Serializer error:                         0
  Unsupported error kind:                   0

Warnings:
  Skipping arrow function:                  0
  Large type added:                         0
  Location unhandled:                       0
  Empty NoUpper:                            0
  Empty SomeKnownUpper:                     0

