foo_parse_fail.js = hasOwnProperty (prop: mixed) => boolean
isPrototypeOf (o: mixed) => boolean
num number
propertyIsEnumerable (prop: mixed) => boolean
str string
toLocaleString () => string
toString () => string
valueOf () => mixed
foo.js = {
  "result":[
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {"name":"num","type":"number","func_details":null},
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {"name":"str","type":"string","func_details":null},
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    }
  ]
}
bar.js = {"error":"not enough type information to autocomplete","result":[]}
str.js = {
  "result":[
    {
      "name":"@@iterator",
      "type":"() => Iterator<string>",
      "func_details":{"return_type":"Iterator<string>","params":[]}
    },
    {
      "name":"anchor",
      "type":"(name: string) => string",
      "func_details":{"return_type":"string","params":[{"name":"name","type":"string"}]}
    },
    {
      "name":"charAt",
      "type":"(pos: number) => string",
      "func_details":{"return_type":"string","params":[{"name":"pos","type":"number"}]}
    },
    {
      "name":"charCodeAt",
      "type":"(index: number) => number",
      "func_details":{"return_type":"number","params":[{"name":"index","type":"number"}]}
    },
    {
      "name":"codePointAt",
      "type":"(index: number) => number",
      "func_details":{"return_type":"number","params":[{"name":"index","type":"number"}]}
    },
    {
      "name":"concat",
      "type":"(...strings: Array<string>) => string",
      "func_details":{
        "return_type":"string",
        "params":[{"name":"...strings","type":"Array<string>"}]
      }
    },
    {
      "name":"endsWith",
      "type":"(searchString: string, position?: number) => boolean",
      "func_details":{
        "return_type":"boolean",
        "params":[{"name":"searchString","type":"string"},{"name":"position?","type":"number"}]
      }
    },
    {
      "name":"includes",
      "type":"(searchString: string, position?: number) => boolean",
      "func_details":{
        "return_type":"boolean",
        "params":[{"name":"searchString","type":"string"},{"name":"position?","type":"number"}]
      }
    },
    {
      "name":"indexOf",
      "type":"(searchString: string, position?: number) => number",
      "func_details":{
        "return_type":"number",
        "params":[{"name":"searchString","type":"string"},{"name":"position?","type":"number"}]
      }
    },
    {
      "name":"lastIndexOf",
      "type":"(searchString: string, position?: number) => number",
      "func_details":{
        "return_type":"number",
        "params":[{"name":"searchString","type":"string"},{"name":"position?","type":"number"}]
      }
    },
    {"name":"length","type":"number","func_details":null},
    {
      "name":"link",
      "type":"(href: string) => string",
      "func_details":{"return_type":"string","params":[{"name":"href","type":"string"}]}
    },
    {
      "name":"localeCompare",
      "type":"(that: string, locales?: (string | Array<string>), options?: Intl$CollatorOptions) => number",
      "func_details":{
        "return_type":"number",
        "params":[
          {"name":"that","type":"string"},
          {"name":"locales?","type":"string | Array<string>"},
          {"name":"options?","type":"Intl$CollatorOptions"}
        ]
      }
    },
    {
      "name":"match",
      "type":"(regexp: (string | RegExp)) => (RegExp$matchResult | null)",
      "func_details":{
        "return_type":"RegExp$matchResult | null",
        "params":[{"name":"regexp","type":"string | RegExp"}]
      }
    },
    {
      "name":"matchAll",
      "type":"(regexp: (string | RegExp)) => Iterator<RegExp$matchResult>",
      "func_details":{
        "return_type":"Iterator<RegExp$matchResult>",
        "params":[{"name":"regexp","type":"string | RegExp"}]
      }
    },
    {
      "name":"normalize",
      "type":"(format?: string) => string",
      "func_details":{"return_type":"string","params":[{"name":"format?","type":"string"}]}
    },
    {
      "name":"padEnd",
      "type":"(targetLength: number, padString?: string) => string",
      "func_details":{
        "return_type":"string",
        "params":[{"name":"targetLength","type":"number"},{"name":"padString?","type":"string"}]
      }
    },
    {
      "name":"padStart",
      "type":"(targetLength: number, padString?: string) => string",
      "func_details":{
        "return_type":"string",
        "params":[{"name":"targetLength","type":"number"},{"name":"padString?","type":"string"}]
      }
    },
    {
      "name":"repeat",
      "type":"(count: number) => string",
      "func_details":{"return_type":"string","params":[{"name":"count","type":"number"}]}
    },
    {
      "name":"replace",
      "type":"(searchValue: (string | RegExp), replaceValue: (string | ((substring: string, ...args: Array<any>) => string))) => string",
      "func_details":{
        "return_type":"string",
        "params":[
          {"name":"searchValue","type":"string | RegExp"},
          {
            "name":"replaceValue",
            "type":"string | ((substring: string, ...args: Array<any>) => string)"
          }
        ]
      }
    },
    {
      "name":"search",
      "type":"(regexp: (string | RegExp)) => number",
      "func_details":{"return_type":"number","params":[{"name":"regexp","type":"string | RegExp"}]}
    },
    {
      "name":"slice",
      "type":"(start?: number, end?: number) => string",
      "func_details":{
        "return_type":"string",
        "params":[{"name":"start?","type":"number"},{"name":"end?","type":"number"}]
      }
    },
    {
      "name":"split",
      "type":"(separator?: (string | RegExp), limit?: number) => Array<string>",
      "func_details":{
        "return_type":"Array<string>",
        "params":[
          {"name":"separator?","type":"string | RegExp"},
          {"name":"limit?","type":"number"}
        ]
      }
    },
    {
      "name":"startsWith",
      "type":"(searchString: string, position?: number) => boolean",
      "func_details":{
        "return_type":"boolean",
        "params":[{"name":"searchString","type":"string"},{"name":"position?","type":"number"}]
      }
    },
    {
      "name":"substr",
      "type":"(from: number, length?: number) => string",
      "func_details":{
        "return_type":"string",
        "params":[{"name":"from","type":"number"},{"name":"length?","type":"number"}]
      }
    },
    {
      "name":"substring",
      "type":"(start: number, end?: number) => string",
      "func_details":{
        "return_type":"string",
        "params":[{"name":"start","type":"number"},{"name":"end?","type":"number"}]
      }
    },
    {
      "name":"toLocaleLowerCase",
      "type":"(locale?: (string | Array<string>)) => string",
      "func_details":{
        "return_type":"string",
        "params":[{"name":"locale?","type":"string | Array<string>"}]
      }
    },
    {
      "name":"toLocaleUpperCase",
      "type":"(locale?: (string | Array<string>)) => string",
      "func_details":{
        "return_type":"string",
        "params":[{"name":"locale?","type":"string | Array<string>"}]
      }
    },
    {
      "name":"toLowerCase",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toUpperCase",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"trim",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"trimEnd",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"trimLeft",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"trimRight",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"trimStart",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    }
  ]
}
num.js = {
  "result":[
    {
      "name":"toExponential",
      "type":"(fractionDigits?: number) => string",
      "func_details":{"return_type":"string","params":[{"name":"fractionDigits?","type":"number"}]}
    },
    {
      "name":"toFixed",
      "type":"(fractionDigits?: number) => string",
      "func_details":{"return_type":"string","params":[{"name":"fractionDigits?","type":"number"}]}
    },
    {
      "name":"toLocaleString",
      "type":"(locales?: (string | Array<string>), options?: Intl$NumberFormatOptions) => string",
      "func_details":{
        "return_type":"string",
        "params":[
          {"name":"locales?","type":"string | Array<string>"},
          {"name":"options?","type":"Intl$NumberFormatOptions"}
        ]
      }
    },
    {
      "name":"toPrecision",
      "type":"(precision?: number) => string",
      "func_details":{"return_type":"string","params":[{"name":"precision?","type":"number"}]}
    },
    {
      "name":"toString",
      "type":"(radix?: number) => string",
      "func_details":{"return_type":"string","params":[{"name":"radix?","type":"number"}]}
    },
    {
      "name":"valueOf",
      "type":"() => number",
      "func_details":{"return_type":"number","params":[]}
    }
  ]
}
bool.js = {
  "result":[
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => boolean",
      "func_details":{"return_type":"boolean","params":[]}
    }
  ]
}
union.js = {
  "result":[
    {"name":"bar","type":"string","func_details":null},
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    }
  ]
}
object_builtins.js = {"error":"not enough type information to autocomplete","result":[]}
function_builtins.js = {"error":"not enough type information to autocomplete","result":[]}
fun.js = {
  "result":[
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    }
  ]
}
this.js = {
  "result":[
    {
      "name":"bar",
      "type":"() => void",
      "func_details":{"return_type":"void","params":[]}
    },
    {"name":"baz","type":"string","func_details":null},
    {
      "name":"hello",
      "type":"() => void",
      "func_details":{"return_type":"void","params":[]}
    }
  ]
}
this2.js = {
  "result":[
    {"name":"super","type":"super","func_details":null},
    {"name":"this","type":"this","func_details":null},
    {"name":"A","type":"class A","func_details":null}
  ]
}
typeparams.js = {
  "result":[
    {
      "name":"toExponential",
      "type":"(fractionDigits?: number) => string",
      "func_details":{"return_type":"string","params":[{"name":"fractionDigits?","type":"number"}]}
    },
    {
      "name":"toFixed",
      "type":"(fractionDigits?: number) => string",
      "func_details":{"return_type":"string","params":[{"name":"fractionDigits?","type":"number"}]}
    },
    {
      "name":"toLocaleString",
      "type":"(locales?: (string | Array<string>), options?: Intl$NumberFormatOptions) => string",
      "func_details":{
        "return_type":"string",
        "params":[
          {"name":"locales?","type":"string | Array<string>"},
          {"name":"options?","type":"Intl$NumberFormatOptions"}
        ]
      }
    },
    {
      "name":"toPrecision",
      "type":"(precision?: number) => string",
      "func_details":{"return_type":"string","params":[{"name":"precision?","type":"number"}]}
    },
    {
      "name":"toString",
      "type":"(radix?: number) => string",
      "func_details":{"return_type":"string","params":[{"name":"radix?","type":"number"}]}
    },
    {
      "name":"valueOf",
      "type":"() => number",
      "func_details":{"return_type":"number","params":[]}
    }
  ]
}
typeparams_function.js = {
  "result":[
    {"name":"this","type":"this","func_details":null},
    {
      "name":"test",
      "type":"<T>() => void",
      "func_details":{"return_type":"void","params":[]}
    }
  ]
}
generics.js = {
  "result":[
    {"name":"cn","type":"C<number>","func_details":null},
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    }
  ]
}
optional.js = {
  "result":[
    {
      "name":"f",
      "type":"(x?: string) => void",
      "func_details":{"return_type":"void","params":[{"name":"x?","type":"string"}]}
    },
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {"name":"o","type":"{x?: string}","func_details":null},
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    },
    {"name":"x","type":"void | string","func_details":null}
  ]
}
jsx1.js = {"result":[{"name":"x","type":"number","func_details":null}]}
jsx2.js = {"result":[{"name":"y","type":"string","func_details":null}]}
jsx3.js = {
  "result":[
    {"name":"x","type":"number","func_details":null},
    {"name":"y","type":"string","func_details":null}
  ]
}
jsx4.js = {
  "result":[
    {"name":"Computerization","type":"(props: empty) => void","func_details":null},
    {"name":"Compressibility","type":"(props: empty) => void","func_details":null},
    {"name":"Complementarity","type":"class Complementarity","func_details":null}
  ]
}
jsx-function-component.js = {
  "result":[
    {"name":"x","type":"number","func_details":null},
    {"name":"y","type":"string","func_details":null}
  ]
}
jsx-function-component-2.js = {"result":[{"name":"x","type":"number","func_details":null}]}
jsx-function-component-3.js = {"result":[{"name":"y","type":"string","func_details":null}]}
jsx-abstract-component.js = {
  "result":[
    {"name":"x","type":"number","func_details":null},
    {"name":"y","type":"string","func_details":null}
  ]
}
jsx-with-children.js = {"result":[{"name":"x","type":"number","func_details":null}]}
jsx-text.js = {"result":[]}
customfun.js = {
  "result":[
    {
      "name":"objectGetPrototypeOf",
      "type":"(o: any) => any",
      "func_details":{"return_type":"any","params":[{"name":"o","type":"any"}]}
    },
    {
      "name":"objectAssign",
      "type":"(target: any, ...sources: Array<any>) => any",
      "func_details":{
        "return_type":"any",
        "params":[{"name":"target","type":"any"},{"name":"...sources","type":"Array<any>"}]
      }
    },
    {
      "name":"idx",
      "type":"<IdxObject: any, IdxResult>(obj: IdxObject, pathCallback: (demaybefiedObj: IdxObject) => IdxResult) => ?IdxResult",
      "func_details":{
        "return_type":"?IdxResult",
        "params":[
          {"name":"obj","type":"IdxObject"},
          {"name":"pathCallback","type":"(demaybefiedObj: IdxObject) => IdxResult"}
        ]
      }
    }
  ]
}
issue-1368.js = {
  "result":[
    {"name":"extended","type":"string","func_details":null},
    {
      "name":"method",
      "type":"() => void",
      "func_details":{"return_type":"void","params":[]}
    },
    {"name":"prop","type":"number","func_details":null}
  ]
}
if.js = {
  "result":[
    {
      "name":"@@iterator",
      "type":"() => Iterator<string>",
      "func_details":{"return_type":"Iterator<string>","params":[]}
    },
    {
      "name":"anchor",
      "type":"(name: string) => string",
      "func_details":{"return_type":"string","params":[{"name":"name","type":"string"}]}
    },
    {
      "name":"charAt",
      "type":"(pos: number) => string",
      "func_details":{"return_type":"string","params":[{"name":"pos","type":"number"}]}
    },
    {
      "name":"charCodeAt",
      "type":"(index: number) => number",
      "func_details":{"return_type":"number","params":[{"name":"index","type":"number"}]}
    },
    {
      "name":"codePointAt",
      "type":"(index: number) => number",
      "func_details":{"return_type":"number","params":[{"name":"index","type":"number"}]}
    },
    {
      "name":"concat",
      "type":"(...strings: Array<string>) => string",
      "func_details":{
        "return_type":"string",
        "params":[{"name":"...strings","type":"Array<string>"}]
      }
    },
    {
      "name":"endsWith",
      "type":"(searchString: string, position?: number) => boolean",
      "func_details":{
        "return_type":"boolean",
        "params":[{"name":"searchString","type":"string"},{"name":"position?","type":"number"}]
      }
    },
    {
      "name":"includes",
      "type":"(searchString: string, position?: number) => boolean",
      "func_details":{
        "return_type":"boolean",
        "params":[{"name":"searchString","type":"string"},{"name":"position?","type":"number"}]
      }
    },
    {
      "name":"indexOf",
      "type":"(searchString: string, position?: number) => number",
      "func_details":{
        "return_type":"number",
        "params":[{"name":"searchString","type":"string"},{"name":"position?","type":"number"}]
      }
    },
    {
      "name":"lastIndexOf",
      "type":"(searchString: string, position?: number) => number",
      "func_details":{
        "return_type":"number",
        "params":[{"name":"searchString","type":"string"},{"name":"position?","type":"number"}]
      }
    },
    {"name":"length","type":"number","func_details":null},
    {
      "name":"link",
      "type":"(href: string) => string",
      "func_details":{"return_type":"string","params":[{"name":"href","type":"string"}]}
    },
    {
      "name":"localeCompare",
      "type":"(that: string, locales?: (string | Array<string>), options?: Intl$CollatorOptions) => number",
      "func_details":{
        "return_type":"number",
        "params":[
          {"name":"that","type":"string"},
          {"name":"locales?","type":"string | Array<string>"},
          {"name":"options?","type":"Intl$CollatorOptions"}
        ]
      }
    },
    {
      "name":"match",
      "type":"(regexp: (string | RegExp)) => (RegExp$matchResult | null)",
      "func_details":{
        "return_type":"RegExp$matchResult | null",
        "params":[{"name":"regexp","type":"string | RegExp"}]
      }
    },
    {
      "name":"matchAll",
      "type":"(regexp: (string | RegExp)) => Iterator<RegExp$matchResult>",
      "func_details":{
        "return_type":"Iterator<RegExp$matchResult>",
        "params":[{"name":"regexp","type":"string | RegExp"}]
      }
    },
    {
      "name":"normalize",
      "type":"(format?: string) => string",
      "func_details":{"return_type":"string","params":[{"name":"format?","type":"string"}]}
    },
    {
      "name":"padEnd",
      "type":"(targetLength: number, padString?: string) => string",
      "func_details":{
        "return_type":"string",
        "params":[{"name":"targetLength","type":"number"},{"name":"padString?","type":"string"}]
      }
    },
    {
      "name":"padStart",
      "type":"(targetLength: number, padString?: string) => string",
      "func_details":{
        "return_type":"string",
        "params":[{"name":"targetLength","type":"number"},{"name":"padString?","type":"string"}]
      }
    },
    {
      "name":"repeat",
      "type":"(count: number) => string",
      "func_details":{"return_type":"string","params":[{"name":"count","type":"number"}]}
    },
    {
      "name":"replace",
      "type":"(searchValue: (string | RegExp), replaceValue: (string | ((substring: string, ...args: Array<any>) => string))) => string",
      "func_details":{
        "return_type":"string",
        "params":[
          {"name":"searchValue","type":"string | RegExp"},
          {
            "name":"replaceValue",
            "type":"string | ((substring: string, ...args: Array<any>) => string)"
          }
        ]
      }
    },
    {
      "name":"search",
      "type":"(regexp: (string | RegExp)) => number",
      "func_details":{"return_type":"number","params":[{"name":"regexp","type":"string | RegExp"}]}
    },
    {
      "name":"slice",
      "type":"(start?: number, end?: number) => string",
      "func_details":{
        "return_type":"string",
        "params":[{"name":"start?","type":"number"},{"name":"end?","type":"number"}]
      }
    },
    {
      "name":"split",
      "type":"(separator?: (string | RegExp), limit?: number) => Array<string>",
      "func_details":{
        "return_type":"Array<string>",
        "params":[
          {"name":"separator?","type":"string | RegExp"},
          {"name":"limit?","type":"number"}
        ]
      }
    },
    {
      "name":"startsWith",
      "type":"(searchString: string, position?: number) => boolean",
      "func_details":{
        "return_type":"boolean",
        "params":[{"name":"searchString","type":"string"},{"name":"position?","type":"number"}]
      }
    },
    {
      "name":"substr",
      "type":"(from: number, length?: number) => string",
      "func_details":{
        "return_type":"string",
        "params":[{"name":"from","type":"number"},{"name":"length?","type":"number"}]
      }
    },
    {
      "name":"substring",
      "type":"(start: number, end?: number) => string",
      "func_details":{
        "return_type":"string",
        "params":[{"name":"start","type":"number"},{"name":"end?","type":"number"}]
      }
    },
    {
      "name":"toLocaleLowerCase",
      "type":"(locale?: (string | Array<string>)) => string",
      "func_details":{
        "return_type":"string",
        "params":[{"name":"locale?","type":"string | Array<string>"}]
      }
    },
    {
      "name":"toLocaleUpperCase",
      "type":"(locale?: (string | Array<string>)) => string",
      "func_details":{
        "return_type":"string",
        "params":[{"name":"locale?","type":"string | Array<string>"}]
      }
    },
    {
      "name":"toLowerCase",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toUpperCase",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"trim",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"trimEnd",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"trimLeft",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"trimRight",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"trimStart",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    }
  ]
}
override.js = {
  "result":[
    {
      "name":"bar",
      "type":"() => void",
      "func_details":{"return_type":"void","params":[]}
    },
    {
      "name":"foo",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"override",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    }
  ]
}
member_class_property.js = {"result":[{"name":"baz","type":"string","func_details":null}]}
member_class_static.js = {
  "result":[
    {"name":"bar","type":"string","func_details":null},
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {"name":"name","type":"string","func_details":null},
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    }
  ]
}
optional_chaining_new.js = {"result":[{"name":"bar","type":"number","func_details":null}]}
optional_chaining_continue.js = {"result":[{"name":"baz","type":"number","func_details":null}]}
idx.js = {
  "result":[
    {"name":"bar","type":"string","func_details":null},
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    }
  ]
}
generic_alias.js = {
  "result":[
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {"name":"name","type":"string","func_details":null},
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    }
  ]
}
object_literal.js:5:16 = {"result":[]}
object_literal.js:7:17 = {"result":[]}
optional_object.js = {
  "result":[
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    },
    {"name":"z","type":"number","func_details":null}
  ]
}
indirect_array.js:5:3 = {
  "result":[
    {
      "name":"@@iterator",
      "type":"() => Iterator<number>",
      "func_details":{"return_type":"Iterator<number>","params":[]}
    },
    {
      "name":"concat",
      "type":"<S, Item: ($ReadOnlyArray<S> | S)>(...items: Array<Item>) => Array<(number | S)>",
      "func_details":{
        "return_type":"Array<(number | S)>",
        "params":[{"name":"...items","type":"Array<Item>"}]
      }
    },
    {
      "name":"copyWithin",
      "type":"(target: number, start: number, end?: number) => Array<number>",
      "func_details":{
        "return_type":"Array<number>",
        "params":[
          {"name":"target","type":"number"},
          {"name":"start","type":"number"},
          {"name":"end?","type":"number"}
        ]
      }
    },
    {
      "name":"entries",
      "type":"() => Iterator<[number, number]>",
      "func_details":{"return_type":"Iterator<[number, number]>","params":[]}
    },
    {
      "name":"every",
      "type":"(callbackfn: (value: number, index: number, array: Array<number>) => mixed, thisArg?: any) => boolean",
      "func_details":{
        "return_type":"boolean",
        "params":[
          {
            "name":"callbackfn",
            "type":"(value: number, index: number, array: Array<number>) => mixed"
          },
          {"name":"thisArg?","type":"any"}
        ]
      }
    },
    {
      "name":"fill",
      "type":"(value: number, begin?: number, end?: number) => Array<number>",
      "func_details":{
        "return_type":"Array<number>",
        "params":[
          {"name":"value","type":"number"},
          {"name":"begin?","type":"number"},
          {"name":"end?","type":"number"}
        ]
      }
    },
    {
      "name":"filter",
      "type":"((callbackfn: class Boolean) => Array<number>) & ((callbackfn: (value: number, index: number, array: Array<number>) => mixed, thisArg?: any) => Array<number>)",
      "func_details":null
    },
    {
      "name":"find",
      "type":"(callbackfn: (value: number, index: number, array: Array<number>) => mixed, thisArg?: any) => (number | void)",
      "func_details":{
        "return_type":"number | void",
        "params":[
          {
            "name":"callbackfn",
            "type":"(value: number, index: number, array: Array<number>) => mixed"
          },
          {"name":"thisArg?","type":"any"}
        ]
      }
    },
    {
      "name":"findIndex",
      "type":"(callbackfn: (value: number, index: number, array: Array<number>) => mixed, thisArg?: any) => number",
      "func_details":{
        "return_type":"number",
        "params":[
          {
            "name":"callbackfn",
            "type":"(value: number, index: number, array: Array<number>) => mixed"
          },
          {"name":"thisArg?","type":"any"}
        ]
      }
    },
    {
      "name":"flat",
      "type":"(depth?: number) => Array<mixed>",
      "func_details":{"return_type":"Array<mixed>","params":[{"name":"depth?","type":"number"}]}
    },
    {
      "name":"flatMap",
      "type":"<U>(callbackfn: (value: number, index: number, array: Array<number>) => ($ReadOnlyArray<U> | U), thisArg?: any) => Array<U>",
      "func_details":{
        "return_type":"Array<U>",
        "params":[
          {
            "name":"callbackfn",
            "type":"(value: number, index: number, array: Array<number>) => ($ReadOnlyArray<U> | U)"
          },
          {"name":"thisArg?","type":"any"}
        ]
      }
    },
    {
      "name":"forEach",
      "type":"(callbackfn: (value: number, index: number, array: Array<number>) => mixed, thisArg?: any) => void",
      "func_details":{
        "return_type":"void",
        "params":[
          {
            "name":"callbackfn",
            "type":"(value: number, index: number, array: Array<number>) => mixed"
          },
          {"name":"thisArg?","type":"any"}
        ]
      }
    },
    {
      "name":"includes",
      "type":"(searchElement: mixed, fromIndex?: number) => boolean",
      "func_details":{
        "return_type":"boolean",
        "params":[{"name":"searchElement","type":"mixed"},{"name":"fromIndex?","type":"number"}]
      }
    },
    {
      "name":"indexOf",
      "type":"(searchElement: mixed, fromIndex?: number) => number",
      "func_details":{
        "return_type":"number",
        "params":[{"name":"searchElement","type":"mixed"},{"name":"fromIndex?","type":"number"}]
      }
    },
    {
      "name":"join",
      "type":"(separator?: string) => string",
      "func_details":{"return_type":"string","params":[{"name":"separator?","type":"string"}]}
    },
    {
      "name":"keys",
      "type":"() => Iterator<number>",
      "func_details":{"return_type":"Iterator<number>","params":[]}
    },
    {
      "name":"lastIndexOf",
      "type":"(searchElement: mixed, fromIndex?: number) => number",
      "func_details":{
        "return_type":"number",
        "params":[{"name":"searchElement","type":"mixed"},{"name":"fromIndex?","type":"number"}]
      }
    },
    {"name":"length","type":"number","func_details":null},
    {
      "name":"map",
      "type":"<U>(callbackfn: (value: number, index: number, array: Array<number>) => U, thisArg?: any) => Array<U>",
      "func_details":{
        "return_type":"Array<U>",
        "params":[
          {
            "name":"callbackfn",
            "type":"(value: number, index: number, array: Array<number>) => U"
          },
          {"name":"thisArg?","type":"any"}
        ]
      }
    },
    {
      "name":"pop",
      "type":"() => number",
      "func_details":{"return_type":"number","params":[]}
    },
    {
      "name":"push",
      "type":"(...items: Array<number>) => number",
      "func_details":{"return_type":"number","params":[{"name":"...items","type":"Array<number>"}]}
    },
    {
      "name":"reduce",
      "type":"((callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Array<number>) => number) => number) & (<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Array<number>) => U, initialValue: U) => U)",
      "func_details":null
    },
    {
      "name":"reduceRight",
      "type":"((callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Array<number>) => number) => number) & (<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Array<number>) => U, initialValue: U) => U)",
      "func_details":null
    },
    {
      "name":"reverse",
      "type":"() => Array<number>",
      "func_details":{"return_type":"Array<number>","params":[]}
    },
    {
      "name":"shift",
      "type":"() => number",
      "func_details":{"return_type":"number","params":[]}
    },
    {
      "name":"slice",
      "type":"(start?: number, end?: number) => Array<number>",
      "func_details":{
        "return_type":"Array<number>",
        "params":[{"name":"start?","type":"number"},{"name":"end?","type":"number"}]
      }
    },
    {
      "name":"some",
      "type":"(callbackfn: (value: number, index: number, array: Array<number>) => mixed, thisArg?: any) => boolean",
      "func_details":{
        "return_type":"boolean",
        "params":[
          {
            "name":"callbackfn",
            "type":"(value: number, index: number, array: Array<number>) => mixed"
          },
          {"name":"thisArg?","type":"any"}
        ]
      }
    },
    {
      "name":"sort",
      "type":"(compareFn?: (a: number, b: number) => number) => Array<number>",
      "func_details":{
        "return_type":"Array<number>",
        "params":[{"name":"compareFn?","type":"(a: number, b: number) => number"}]
      }
    },
    {
      "name":"splice",
      "type":"(start: number, deleteCount?: number, ...items: Array<number>) => Array<number>",
      "func_details":{
        "return_type":"Array<number>",
        "params":[
          {"name":"start","type":"number"},
          {"name":"deleteCount?","type":"number"},
          {"name":"...items","type":"Array<number>"}
        ]
      }
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"unshift",
      "type":"(...items: Array<number>) => number",
      "func_details":{"return_type":"number","params":[{"name":"...items","type":"Array<number>"}]}
    },
    {
      "name":"values",
      "type":"() => Iterator<number>",
      "func_details":{"return_type":"Iterator<number>","params":[]}
    }
  ]
}
indirect_array.js:10:3 = {
  "result":[
    {
      "name":"@@iterator",
      "type":"() => Iterator<number>",
      "func_details":{"return_type":"Iterator<number>","params":[]}
    },
    {
      "name":"concat",
      "type":"<S, Item: ($ReadOnlyArray<S> | S)>(...items: Array<Item>) => Array<(number | S)>",
      "func_details":{
        "return_type":"Array<(number | S)>",
        "params":[{"name":"...items","type":"Array<Item>"}]
      }
    },
    {
      "name":"copyWithin",
      "type":"(target: number, start: number, end?: number) => Array<number>",
      "func_details":{
        "return_type":"Array<number>",
        "params":[
          {"name":"target","type":"number"},
          {"name":"start","type":"number"},
          {"name":"end?","type":"number"}
        ]
      }
    },
    {
      "name":"entries",
      "type":"() => Iterator<[number, number]>",
      "func_details":{"return_type":"Iterator<[number, number]>","params":[]}
    },
    {
      "name":"every",
      "type":"(callbackfn: (value: number, index: number, array: Array<number>) => mixed, thisArg?: any) => boolean",
      "func_details":{
        "return_type":"boolean",
        "params":[
          {
            "name":"callbackfn",
            "type":"(value: number, index: number, array: Array<number>) => mixed"
          },
          {"name":"thisArg?","type":"any"}
        ]
      }
    },
    {
      "name":"fill",
      "type":"(value: number, begin?: number, end?: number) => Array<number>",
      "func_details":{
        "return_type":"Array<number>",
        "params":[
          {"name":"value","type":"number"},
          {"name":"begin?","type":"number"},
          {"name":"end?","type":"number"}
        ]
      }
    },
    {
      "name":"filter",
      "type":"((callbackfn: class Boolean) => Array<number>) & ((callbackfn: (value: number, index: number, array: Array<number>) => mixed, thisArg?: any) => Array<number>)",
      "func_details":null
    },
    {
      "name":"find",
      "type":"(callbackfn: (value: number, index: number, array: Array<number>) => mixed, thisArg?: any) => (number | void)",
      "func_details":{
        "return_type":"number | void",
        "params":[
          {
            "name":"callbackfn",
            "type":"(value: number, index: number, array: Array<number>) => mixed"
          },
          {"name":"thisArg?","type":"any"}
        ]
      }
    },
    {
      "name":"findIndex",
      "type":"(callbackfn: (value: number, index: number, array: Array<number>) => mixed, thisArg?: any) => number",
      "func_details":{
        "return_type":"number",
        "params":[
          {
            "name":"callbackfn",
            "type":"(value: number, index: number, array: Array<number>) => mixed"
          },
          {"name":"thisArg?","type":"any"}
        ]
      }
    },
    {
      "name":"flat",
      "type":"(depth?: number) => Array<mixed>",
      "func_details":{"return_type":"Array<mixed>","params":[{"name":"depth?","type":"number"}]}
    },
    {
      "name":"flatMap",
      "type":"<U>(callbackfn: (value: number, index: number, array: Array<number>) => ($ReadOnlyArray<U> | U), thisArg?: any) => Array<U>",
      "func_details":{
        "return_type":"Array<U>",
        "params":[
          {
            "name":"callbackfn",
            "type":"(value: number, index: number, array: Array<number>) => ($ReadOnlyArray<U> | U)"
          },
          {"name":"thisArg?","type":"any"}
        ]
      }
    },
    {
      "name":"forEach",
      "type":"(callbackfn: (value: number, index: number, array: Array<number>) => mixed, thisArg?: any) => void",
      "func_details":{
        "return_type":"void",
        "params":[
          {
            "name":"callbackfn",
            "type":"(value: number, index: number, array: Array<number>) => mixed"
          },
          {"name":"thisArg?","type":"any"}
        ]
      }
    },
    {
      "name":"includes",
      "type":"(searchElement: mixed, fromIndex?: number) => boolean",
      "func_details":{
        "return_type":"boolean",
        "params":[{"name":"searchElement","type":"mixed"},{"name":"fromIndex?","type":"number"}]
      }
    },
    {
      "name":"indexOf",
      "type":"(searchElement: mixed, fromIndex?: number) => number",
      "func_details":{
        "return_type":"number",
        "params":[{"name":"searchElement","type":"mixed"},{"name":"fromIndex?","type":"number"}]
      }
    },
    {
      "name":"join",
      "type":"(separator?: string) => string",
      "func_details":{"return_type":"string","params":[{"name":"separator?","type":"string"}]}
    },
    {
      "name":"keys",
      "type":"() => Iterator<number>",
      "func_details":{"return_type":"Iterator<number>","params":[]}
    },
    {
      "name":"lastIndexOf",
      "type":"(searchElement: mixed, fromIndex?: number) => number",
      "func_details":{
        "return_type":"number",
        "params":[{"name":"searchElement","type":"mixed"},{"name":"fromIndex?","type":"number"}]
      }
    },
    {"name":"length","type":"number","func_details":null},
    {
      "name":"map",
      "type":"<U>(callbackfn: (value: number, index: number, array: Array<number>) => U, thisArg?: any) => Array<U>",
      "func_details":{
        "return_type":"Array<U>",
        "params":[
          {
            "name":"callbackfn",
            "type":"(value: number, index: number, array: Array<number>) => U"
          },
          {"name":"thisArg?","type":"any"}
        ]
      }
    },
    {
      "name":"pop",
      "type":"() => number",
      "func_details":{"return_type":"number","params":[]}
    },
    {
      "name":"push",
      "type":"(...items: Array<number>) => number",
      "func_details":{"return_type":"number","params":[{"name":"...items","type":"Array<number>"}]}
    },
    {
      "name":"reduce",
      "type":"((callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Array<number>) => number) => number) & (<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Array<number>) => U, initialValue: U) => U)",
      "func_details":null
    },
    {
      "name":"reduceRight",
      "type":"((callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Array<number>) => number) => number) & (<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Array<number>) => U, initialValue: U) => U)",
      "func_details":null
    },
    {
      "name":"reverse",
      "type":"() => Array<number>",
      "func_details":{"return_type":"Array<number>","params":[]}
    },
    {
      "name":"shift",
      "type":"() => number",
      "func_details":{"return_type":"number","params":[]}
    },
    {
      "name":"slice",
      "type":"(start?: number, end?: number) => Array<number>",
      "func_details":{
        "return_type":"Array<number>",
        "params":[{"name":"start?","type":"number"},{"name":"end?","type":"number"}]
      }
    },
    {
      "name":"some",
      "type":"(callbackfn: (value: number, index: number, array: Array<number>) => mixed, thisArg?: any) => boolean",
      "func_details":{
        "return_type":"boolean",
        "params":[
          {
            "name":"callbackfn",
            "type":"(value: number, index: number, array: Array<number>) => mixed"
          },
          {"name":"thisArg?","type":"any"}
        ]
      }
    },
    {
      "name":"sort",
      "type":"(compareFn?: (a: number, b: number) => number) => Array<number>",
      "func_details":{
        "return_type":"Array<number>",
        "params":[{"name":"compareFn?","type":"(a: number, b: number) => number"}]
      }
    },
    {
      "name":"splice",
      "type":"(start: number, deleteCount?: number, ...items: Array<number>) => Array<number>",
      "func_details":{
        "return_type":"Array<number>",
        "params":[
          {"name":"start","type":"number"},
          {"name":"deleteCount?","type":"number"},
          {"name":"...items","type":"Array<number>"}
        ]
      }
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"unshift",
      "type":"(...items: Array<number>) => number",
      "func_details":{"return_type":"number","params":[{"name":"...items","type":"Array<number>"}]}
    },
    {
      "name":"values",
      "type":"() => Iterator<number>",
      "func_details":{"return_type":"Iterator<number>","params":[]}
    }
  ]
}
infer.js = {
  "result":[
    {"name":"b","type":"number","func_details":null},
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    }
  ]
}
eval_predicate.js = {
  "result":[
    {"name":"a","type":"number","func_details":null},
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    }
  ]
}
eval_destructor.js = {
  "result":[
    {"name":"a","type":"number","func_details":null},
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    }
  ]
}
poly.js = {
  "result":[
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    },
    {"name":"x","type":"number","func_details":null},
    {"name":"y","type":"number","func_details":null}
  ]
}
poly_no_args.js = {
  "result":[
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    },
    {"name":"x","type":"number","func_details":null}
  ]
}
identifier.js = {
  "result":[
    {"name":"this","type":"this","func_details":null},
    {"name":"flowery","type":"number","func_details":null},
    {"name":"flounder","type":"any","func_details":null},
    {"name":"flotsam","type":"number","func_details":null},
    {"name":"florist","type":"number","func_details":null},
    {
      "name":"florescent",
      "type":"() => void",
      "func_details":{"return_type":"void","params":[]}
    },
    {"name":"floater","type":"number","func_details":null},
    {"name":"bartender","type":"number","func_details":null}
  ]
}
super.js = {
  "result":[
    {"name":"super","type":"super","func_details":null},
    {"name":"this","type":"this","func_details":null},
    {"name":"Foo","type":"class Foo","func_details":null}
  ]
}
this-2.js = {
  "result":[
    {
      "name":"y",
      "type":"(z: empty) => empty",
      "func_details":{"return_type":"empty","params":[{"name":"z","type":"empty"}]}
    },
    {"name":"x","type":"any","func_details":null},
    {
      "name":"foo",
      "type":"() => void",
      "func_details":{"return_type":"void","params":[]}
    }
  ]
}
{
  "result":[
    {"name":"this","type":"this","func_details":null},
    {
      "name":"y",
      "type":"(z: empty) => empty",
      "func_details":{"return_type":"empty","params":[{"name":"z","type":"empty"}]}
    },
    {"name":"x","type":"void","func_details":null},
    {
      "name":"foo",
      "type":"() => void",
      "func_details":{"return_type":"void","params":[]}
    }
  ]
}
{
  "result":[
    {"name":"z","type":"empty","func_details":null},
    {
      "name":"y",
      "type":"(z: empty) => any",
      "func_details":{"return_type":"any","params":[{"name":"z","type":"empty"}]}
    },
    {"name":"x","type":"void","func_details":null},
    {
      "name":"foo",
      "type":"() => void",
      "func_details":{"return_type":"void","params":[]}
    }
  ]
}
{
  "result":[
    {"name":"super","type":"super","func_details":null},
    {"name":"this","type":"this","func_details":null},
    {
      "name":"y",
      "type":"(z: empty) => empty",
      "func_details":{"return_type":"empty","params":[{"name":"z","type":"empty"}]}
    },
    {"name":"x","type":"void","func_details":null},
    {
      "name":"foo",
      "type":"() => void",
      "func_details":{"return_type":"void","params":[]}
    },
    {"name":"Bar","type":"class Bar","func_details":null}
  ]
}
pattern.js = {"result":[]}
{
  "result":[
    {"name":"foo","type":"number","func_details":null},
    {
      "name":"bar",
      "type":"() => void",
      "func_details":{"return_type":"void","params":[]}
    }
  ]
}
{"result":[]}
normalize-1.js = {
  "result":[
    {"name":"b","type":"T","func_details":null},
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    }
  ]
}
normalize-2.js = {
  "result":[
    {"name":"this","type":"this","func_details":null},
    {
      "name":"foo",
      "type":"<T>(a: {b: T}) => any",
      "func_details":{"return_type":"any","params":[{"name":"a","type":"{b: T}"}]}
    },
    {"name":"c","type":"T","func_details":null},
    {"name":"a","type":"{b: T}","func_details":null}
  ]
}
unqualified-type-annotation.js = {
  "result":[
    {
      "name":"Typologies",
      "type":"{|+Typesafety: interface Typesafety, +Typhoon: string, +Typhoons: string, +Typical: type Typical = {|x: number, y: number|}, +Tyrannosaurus: class Tyrannosaurus, +default: number|}",
      "func_details":null
    },
    {"name":"Typography","type":"class Typewriter","func_details":null},
    {"name":"Typewriter","type":"class Typewriter","func_details":null},
    {
      "name":"Types",
      "type":"{|+Typesafety: interface Typesafety, +Typhoon: string, +Typhoons: string, +Typical: type Typical = {|x: number, y: number|}, +Tyrannosaurus: class Tyrannosaurus, +default: number|}",
      "func_details":null
    },
    {"name":"Typesafe","type":"interface Typesafety","func_details":null},
    {"name":"Typhoon","type":"type ./type-exports.js = string","func_details":null},
    {"name":"Typnotism","type":"type Typnotism = number","func_details":null},
    {"name":"Tyrant","type":"type Tyrant = string","func_details":null},
    {"name":"Tympanic","type":"type Tympanic = number","func_details":null},
    {"name":"Typeset","type":"interface Typeset","func_details":null},
    {"name":"Typaram","type":"Typaram","func_details":null}
  ]
}
qualified-type-annotation.js = {
  "result":[
    {"name":"Typesafety","type":"interface Typesafety","func_details":null},
    {
      "name":"Typical",
      "type":"type Typical = {|x: number, y: number|}",
      "func_details":null
    },
    {"name":"Tyrannosaurus","type":"class Tyrannosaurus","func_details":null}
  ]
}
qualified-type-annotation-require.js = {
  "result":[
    {"name":"Typesafety","type":"interface Typesafety","func_details":null},
    {
      "name":"Typical",
      "type":"type Typical = {|x: number, y: number|}",
      "func_details":null
    },
    {"name":"Tyrannosaurus","type":"class Tyrannosaurus","func_details":null}
  ]
}
inherited-class-properties.js = {
  "result":[
    {"name":"bar","type":"\"bar\"","func_details":null},
    {"name":"baz","type":"\"baz\"","func_details":null},
    {"name":"foo","type":"\"oof\"","func_details":null}
  ]
}
function-added-properties.js = {
  "result":[
    {"name":"bar","type":"string","func_details":null},
    {"name":"baz","type":"string","func_details":null},
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    }
  ]
}
comments.js (line) = {"result":[]}
comments.js (block) = {"result":[]}
literal.js (inside string) = {"result":[]}
literal.js (inside regex) = {"result":[]}
literal.js (inside template literal) = {"result":[]}
import_source.js = {"result":[]}
object-with-prototype.js = {
  "result":[
    {"name":"bar","type":"string","func_details":null},
    {"name":"baz","type":"string","func_details":null},
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    }
  ]
}
object-spread-1.js = {
  "result":[
    {"name":"bar","type":"B","func_details":null},
    {"name":"foo","type":"A","func_details":null},
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    }
  ]
}
object-spread-2.js = {
  "result":[
    {"name":"bar","type":"C","func_details":null},
    {"name":"foo","type":"A","func_details":null},
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    }
  ]
}
union-2.js = {
  "result":[
    {"name":"bar","type":"\"D\" | \"B\"","func_details":null},
    {"name":"foo","type":"\"A\"","func_details":null},
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    }
  ]
}
type-alias.js = {
  "result":[
    {"name":"a","type":"number","func_details":null},
    {"name":"b","type":"string","func_details":null},
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    }
  ]
}
intersection.js = {
  "result":[
    {"name":"bar","type":"B","func_details":null},
    {"name":"baz","type":"D","func_details":null},
    {"name":"foo","type":"C","func_details":null},
    {
      "name":"hasOwnProperty",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"isPrototypeOf",
      "type":"(o: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"o","type":"mixed"}]}
    },
    {
      "name":"propertyIsEnumerable",
      "type":"(prop: mixed) => boolean",
      "func_details":{"return_type":"boolean","params":[{"name":"prop","type":"mixed"}]}
    },
    {
      "name":"toLocaleString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"toString",
      "type":"() => string",
      "func_details":{"return_type":"string","params":[]}
    },
    {
      "name":"valueOf",
      "type":"() => mixed",
      "func_details":{"return_type":"mixed","params":[]}
    }
  ]
}
