Error ---------------------------------------------------------------------------------------------------- basic.js:1:29

Cannot check number literal `1` against `T` because number literal `1` [1] is not supported by unclassified use
ConditionalT. [incompatible-use]

   1| type BasicConditionalType = 1 extends infer T ? string : number;  // evals to string
                                  ^ [1]


Error -------------------------------------------------------------------------------------------- invalid_infer.js:2:10

Invalid infer type declaration. `infer` declarations are only permitted in the `extends` clause of a conditional type.
[invalid-infer]

   2|   let _: infer X;
               ^^^^^^^


Error -------------------------------------------------------------------------------------------- invalid_infer.js:5:10

Invalid infer type declaration. `infer` declarations are only permitted in the `extends` clause of a conditional type.
[invalid-infer]

   5|   let _: infer A extends infer B ? infer C : infer D;
               ^^^^^^^


Error -------------------------------------------------------------------------------------------- invalid_infer.js:5:36

Invalid infer type declaration. `infer` declarations are only permitted in the `extends` clause of a conditional type.
[invalid-infer]

   5|   let _: infer A extends infer B ? infer C : infer D;
                                         ^^^^^^^


Error -------------------------------------------------------------------------------------------- invalid_infer.js:5:46

Invalid infer type declaration. `infer` declarations are only permitted in the `extends` clause of a conditional type.
[invalid-infer]

   5|   let _: infer A extends infer B ? infer C : infer D;
                                                   ^^^^^^^



Found 5 errors
