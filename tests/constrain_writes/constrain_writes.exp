Error ------------------------------------------------------------------------------------------------------ test.js:4:5

Cannot assign `"a"` to `x` because string [1] is incompatible with number [2]. All writes to `x` must be compatible with
the type of its initializer [3]. Add an annotation to `x` [3] if a different type is desired. [incompatible-type]

   test.js:4:5
   4| x = "a";
          ^^^ [1]

References:
   test.js:3:9
   3| var x = 42;
              ^^ [2]
   test.js:3:5
   3| var x = 42;
          ^ [3]


Error ----------------------------------------------------------------------------------------------------- test.js:15:5

Cannot assign `g()` to `y` because string [1] is incompatible with number [2]. All writes to `y` must be compatible with
the type of its initializer [3]. Add an annotation to `y` [3] if a different type is desired. [incompatible-type]

   test.js:15:5
   15| y = g();
           ^^^

References:
   test.js:11:10
   11|   return "a";
                ^^^ [1]
   test.js:7:10
    7|   return 42;
                ^^ [2]
   test.js:14:5
   14| var y = f();
           ^ [3]


Error ----------------------------------------------------------------------------------------------------- test.js:19:5

Cannot assign `"a"` to `w` because string [1] is incompatible with number [2]. All writes to `w` must be compatible with
the type of one of its initial assignments [3], [4]. Add an annotation to `w` [3] if a different type is desired.
[incompatible-type]

   test.js:19:5
   19| w = "a";
           ^^^ [1]

References:
   test.js:18:5
   18| w = 42;
           ^^ [2]
   test.js:17:5
   17| var w = null;
           ^ [3]
   test.js:18:1
   18| w = 42;
       ^ [4]


Error ----------------------------------------------------------------------------------------------------- test.js:23:5

Cannot assign `"a"` to `z` because string [1] is incompatible with number [2]. All writes to `z` must be compatible with
the type of its initial assignment [3]. Add an annotation to `z` [4] if a different type is desired. [incompatible-type]

   test.js:23:5
   23| z = "a";
           ^^^ [1]

References:
   test.js:22:5
   22| z = 42;
           ^^ [2]
   test.js:22:1
   22| z = 42;
       ^ [3]
   test.js:21:5
   21| var z;
           ^ [4]


Error ----------------------------------------------------------------------------------------------------- test.js:26:7

Cannot assign `"Hello"` to `x` because string [1] is incompatible with number [2]. [incompatible-type]

   test.js:26:7
   26|   x = "Hello"; // only regular failure
             ^^^^^^^ [1]

References:
   test.js:25:16
   25| function ff(x: number) {
                      ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:40:16

Cannot assign `x` to `a` because rest of object pattern [1] is incompatible with string [2]. [incompatible-type]

   test.js:40:16
   40|   var {...a} = x; // no post-check here
                      ^

References:
   test.js:40:8
   40|   var {...a} = x; // no post-check here
              ^^^^ [1]
   test.js:39:11
   39|   var a : string;
                 ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:45:7

Cannot assign `42` to `p` because number [1] is incompatible with string [2]. [incompatible-type]

   test.js:45:7
   45|   p = 42; // error: number ~> string, but no post-infer
             ^^ [1]

References:
   test.js:44:8
   44|   var {p}: T = {p: "foo"};
              ^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:79:7

Cannot reassign class binding `e` [1]. [cannot-reassign]

   test.js:79:7
   79|       e = 42;
             ^

References:
   test.js:77:17
   77|   let _ = class e {
                       ^ [1]


Error ----------------------------------------------------------------------------------------------------- test.js:88:7

Cannot assign `"hi"` to `x` because string [1] is incompatible with number [2]. [incompatible-type]

   test.js:88:7
   88|   x = "hi";
             ^^^^ [1]

References:
   test.js:85:18
   85|   declare var x: number;
                        ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:89:3

Cannot reassign declared function binding `f` [1]. [cannot-reassign]

   test.js:89:3
   89|   f = "hi";
         ^

References:
   test.js:86:20
   86|   declare function f(): void;
                          ^ [1]


Error ----------------------------------------------------------------------------------------------------- test.js:89:7

Cannot assign `"hi"` to `f` because string [1] is incompatible with function type [2]. [incompatible-type]

   test.js:89:7
   89|   f = "hi";
             ^^^^ [1]

References:
   test.js:86:21
   86|   declare function f(): void;
                           ^^^^^^^^ [2]



Found 11 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
