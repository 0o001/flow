Error -------------------------------------------------------------------------------- immediate_call_expression.js:6:10

Cannot cast `x` to string because number [1] is incompatible with string [2]. [incompatible-cast]

   immediate_call_expression.js:6:10
   6|         (x: string); // error number ~> string
               ^

References:
   immediate_call_expression.js:3:10
   3| const x: number => void = (function () {
               ^^^^^^ [1]
   immediate_call_expression.js:6:13
   6|         (x: string); // error number ~> string
                  ^^^^^^ [2]


Error ---------------------------------------------------------------------------------- implicit_instantiation.js:14:49

Cannot cast `a` to empty because string [1] is incompatible with empty [2]. [incompatible-cast]

   implicit_instantiation.js:14:49
   14|   const reasonTest: (string) => mixed = (a) => (a: empty); // ok
                                                       ^

References:
   implicit_instantiation.js:14:22
   14|   const reasonTest: (string) => mixed = (a) => (a: empty); // ok
                            ^^^^^^ [1]
   implicit_instantiation.js:14:52
   14|   const reasonTest: (string) => mixed = (a) => (a: empty); // ok
                                                          ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- intersections.js:9:24

Cannot cast `x` to number because string [1] is incompatible with number [2]. [incompatible-cast]

   intersections.js:9:24
   9|   foo('str', (x) => { (x: number); }); // error
                             ^

References:
   intersections.js:5:44
   5|   declare function foo(tag: 'str', cb: (x: string) => void): void;
                                                 ^^^^^^ [1]
   intersections.js:9:27
   9|   foo('str', (x) => { (x: number); }); // error
                                ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- intersections.js:10:3

Cannot call `foo` because: [incompatible-call]
 - Either string [1] is incompatible with string literal `bool` [2].
 - Or string [1] is incompatible with string literal `str` [3].
 - Or string [1] is incompatible with string literal `num` [4].

   intersections.js:10:3
   10|   foo('a', (x) => { (x: number); }); // error
         ^^^

References:
   intersections.js:10:7
   10|   foo('a', (x) => { (x: number); }); // error
             ^^^ [1]
   intersections.js:4:29
    4|   declare function foo(tag: 'bool', cb: (x: boolean) => void): void;
                                   ^^^^^^ [2]
   intersections.js:5:29
    5|   declare function foo(tag: 'str', cb: (x: string) => void): void;
                                   ^^^^^ [3]
   intersections.js:6:29
    6|   declare function foo(tag: 'num', cb: (x: number) => void): void;
                                   ^^^^^ [4]


Error ------------------------------------------------------------------------------------------- intersections.js:10:13

An annotation on `x` is required because Flow cannot infer its type from local context. [missing-local-annot]

   10|   foo('a', (x) => { (x: number); }); // error
                   ^


Error ------------------------------------------------------------------------------------------- intersections.js:22:24

Cannot cast `x` to string because object type [1] is incompatible with string [2]. [incompatible-cast]

   intersections.js:22:24
   22|   foo('obj', (x) => { (x: string); }); // error
                              ^

References:
   intersections.js:17:33
   17|   type O = (tag: 'obj', cb: (x: {}) => void) => void;
                                       ^^ [1]
   intersections.js:22:27
   22|   foo('obj', (x) => { (x: string); }); // error
                                 ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- intersections.js:27:24

Cannot cast `x` to string because object type [1] is incompatible with string [2]. [incompatible-cast]

   intersections.js:27:24
   27|   bar('obj', (x) => { (x: string); }); // error
                              ^

References:
   intersections.js:17:33
   17|   type O = (tag: 'obj', cb: (x: {}) => void) => void;
                                       ^^ [1]
   intersections.js:27:27
   27|   bar('obj', (x) => { (x: string); }); // error
                                 ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- intersections.js:30:16

An annotation on `x` is required because Flow cannot infer its type from local context. [missing-local-annot]

   30|   bak('bool', (x) => { (x: boolean); }); // error missing annot (ideally would use hint)
                      ^


Error ------------------------------------------------------------------------------------------- intersections.js:31:16

An annotation on `x` is required because Flow cannot infer its type from local context. [missing-local-annot]

   31|   bak('bool', (x) => { (x: string); }); // error missing annot (ideally would use hint and error on cast)
                      ^


Error ------------------------------------------------------------------------------------------- intersections.js:39:10

An annotation on `y` is required because Flow cannot infer its type from local context. [missing-local-annot]

   39|   foo(x, y => {}); // error missing annotation for y
                ^



Found 10 errors
