// check coverage of declare module

declare module foo {
}

Covered: 100.00% (1 of 1 expressions)

// This file triggers a violation of the "disjoint-or-nested ranges invariant"
// that we implicitly assume in type-at-pos and coverage implementations. In
// particular, when unchecked it causes a crash with coverage --color.

declare module foo {
}

declare module bar {
}

Covered: 100.00% (2 of 2 expressions)

// This file triggers a violation of the "disjoint-or-nested ranges invariant"
// that we implicitly assume in type-at-pos and coverage implementations. In
// particular, when unchecked it causes non-termination with coverage --color.

declare module foo {
}

declare module bar {
}

declare class qux {
}

Covered: 100.00% (3 of 3 expressions)

Covered: 75.00% (3 of 4 expressions)

Covered: 75.00% (3 of 4 expressions)

Covered: 0.00% (0 of 4 expressions)

Covered: 75.00% (3 of 4 expressions)

-----------------------------
coverage.js
-----------------------------

{
  "expressions":{
    "covered_count":10,
    "covered_locs":[
      {
        "source":"coverage.js",
        "type":"SourceFile",
        "start":{"line":3,"column":7,"offset":16},
        "end":{"line":3,"column":9,"offset":19}
      },
      {
        "source":"coverage.js",
        "type":"SourceFile",
        "start":{"line":3,"column":13,"offset":22},
        "end":{"line":3,"column":13,"offset":23}
      },
      {
        "source":"coverage.js",
        "type":"SourceFile",
        "start":{"line":3,"column":13,"offset":22},
        "end":{"line":3,"column":17,"offset":27}
      },
      {
        "source":"coverage.js",
        "type":"SourceFile",
        "start":{"line":3,"column":13,"offset":22},
        "end":{"line":3,"column":21,"offset":31}
      },
      {
        "source":"coverage.js",
        "type":"SourceFile",
        "start":{"line":3,"column":17,"offset":26},
        "end":{"line":3,"column":17,"offset":27}
      },
      {
        "source":"coverage.js",
        "type":"SourceFile",
        "start":{"line":3,"column":21,"offset":30},
        "end":{"line":3,"column":21,"offset":31}
      },
      {
        "source":"coverage.js",
        "type":"SourceFile",
        "start":{"line":5,"column":18,"offset":51},
        "end":{"line":5,"column":20,"offset":54}
      },
      {
        "source":"coverage.js",
        "type":"SourceFile",
        "start":{"line":5,"column":18,"offset":51},
        "end":{"line":5,"column":24,"offset":58}
      },
      {
        "source":"coverage.js",
        "type":"SourceFile",
        "start":{"line":5,"column":24,"offset":57},
        "end":{"line":5,"column":24,"offset":58}
      },
      {
        "source":"coverage.js",
        "type":"SourceFile",
        "start":{"line":7,"column":19,"offset":79},
        "end":{"line":7,"column":19,"offset":80}
      }
    ],
    "uncovered_count":5,
    "uncovered_locs":[
      {
        "source":"coverage.js",
        "type":"SourceFile",
        "start":{"line":5,"column":7,"offset":40},
        "end":{"line":5,"column":14,"offset":48}
      },
      {
        "source":"coverage.js",
        "type":"SourceFile",
        "start":{"line":7,"column":7,"offset":67},
        "end":{"line":7,"column":9,"offset":70}
      },
      {
        "source":"coverage.js",
        "type":"SourceFile",
        "start":{"line":7,"column":13,"offset":73},
        "end":{"line":7,"column":15,"offset":76}
      },
      {
        "source":"coverage.js",
        "type":"SourceFile",
        "start":{"line":7,"column":13,"offset":73},
        "end":{"line":7,"column":19,"offset":80}
      },
      {
        "source":"coverage.js",
        "type":"SourceFile",
        "start":{"line":9,"column":1,"offset":83},
        "end":{"line":9,"column":3,"offset":86}
      }
    ]
  }
}
// @flow

const foo = 5 + 3 + 2;

const bar: any = foo - 2;

const baz = bar + 1;

baz;

Covered: 66.67% (10 of 15 expressions)

