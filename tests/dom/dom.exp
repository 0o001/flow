Error -------------------------------------------------------------------------------- CanvasRenderingContext2D.js:11:16

Cannot call `ctx.moveTo` with `'0'` bound to `x` because string [1] is incompatible with number [2]. [incompatible-call]

   CanvasRenderingContext2D.js:11:16
     11|     ctx.moveTo('0', '1');  // error: should be numbers
                        ^^^ [1]

References:
   <BUILTINS>/dom.js:2390:13
   2390|   moveTo(x: number, y: number): void;
                     ^^^^^^ [2]


Error -------------------------------------------------------------------------------- CanvasRenderingContext2D.js:11:21

Cannot call `ctx.moveTo` with `'1'` bound to `y` because string [1] is incompatible with number [2]. [incompatible-call]

   CanvasRenderingContext2D.js:11:21
     11|     ctx.moveTo('0', '1');  // error: should be numbers
                             ^^^ [1]

References:
   <BUILTINS>/dom.js:2390:24
   2390|   moveTo(x: number, y: number): void;
                                ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ ClipboardEvent.js:10:45

Cannot call `ClipboardEvent` with `'invalid'` bound to `type` because string [1] is incompatible with literal union [2].
[incompatible-call]

   ClipboardEvent.js:10:45
    10|     const invalidEvent = new ClipboardEvent('invalid'); // invalid
                                                    ^^^^^^^^^ [1]

References:
   <BUILTINS>/dom.js:897:21
   897|   constructor(type: ClipboardEventTypes, eventInit?: ClipboardEvent$Init): void;
                            ^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- ClipboardEvent.js:25:7

Cannot call `ClipboardEvent` with object literal bound to `eventInit` because property `clipboardData` is missing in
object literal [1] but exists in `ClipboardEvent$Init` [2]. [prop-missing]

   ClipboardEvent.js:25:7
    25|       {}, // invalid, clipboardData may not be omitted
              ^^ [1]

References:
   <BUILTINS>/dom.js:897:54
   897|   constructor(type: ClipboardEventTypes, eventInit?: ClipboardEvent$Init): void;
                                                             ^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ ClipboardEvent.js:27:64

Cannot call `ClipboardEvent` with object literal bound to `eventInit` because object literal [1] is incompatible with
`DataTransfer` [2] in property `clipboardData`. [incompatible-call]

   ClipboardEvent.js:27:64
                                                                       v
    27|     const invalid2 = new ClipboardEvent('cut', {clipboardData: {
    28|       'text/plain': 'thats not how you do it'}}); // invalid
              ---------------------------------------^ [1]

References:
   <BUILTINS>/dom.js:892:18
   892|   clipboardData: DataTransfer | null,
                         ^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ ClipboardEvent.js:32:23

Cannot call `e.clipboardData.getData` because property `getData` is missing in null or undefined [1]. [incompatible-use]

   ClipboardEvent.js:32:23
    32|       e.clipboardData.getData('text/plain'); // invalid: null check required
                              ^^^^^^^

References:
   <BUILTINS>/dom.js:898:19
   898|   +clipboardData: ?DataTransfer; // readonly
                          ^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------------- Element.js:14:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because string [1] is incompatible with literal
union [2] in property `behavior`. [incompatible-call]

   Element.js:14:28
     14|     element.scrollIntoView({ behavior: 'invalid' });
                                    ^^^^^^^^^^^^^^^^^^^^^^^

References:
   Element.js:14:40
     14|     element.scrollIntoView({ behavior: 'invalid' });
                                                ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1839:22
   1839|          behavior?: ('auto' | 'instant' | 'smooth'),
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- Element.js:15:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because string [1] is incompatible with literal
union [2] in property `block`. [incompatible-call]

   Element.js:15:28
     15|     element.scrollIntoView({ block: 'invalid' });
                                    ^^^^^^^^^^^^^^^^^^^^

References:
   Element.js:15:37
     15|     element.scrollIntoView({ block: 'invalid' });
                                             ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1840:19
   1840|          block?: ('start' | 'center' | 'end' | 'nearest'),
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- Element.js:16:28

Cannot call `element.scrollIntoView` with `1` bound to `arg` because number [1] is incompatible with boolean [2].
[incompatible-call]

   Element.js:16:28
     16|     element.scrollIntoView(1);
                                    ^ [1]

References:
   <BUILTINS>/dom.js:1838:25
   1838|   scrollIntoView(arg?: (boolean | {
                                 ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- HTMLCollection.js:10:4

Cannot get `el.className` because property `className` is missing in null [1]. [incompatible-use]

   HTMLCollection.js:10:4
     10| el.className // invalid
            ^^^^^^^^^

References:
   <BUILTINS>/dom.js:1019:56
   1019|   item(nameOrIndex?: any, optionalIndex?: any): Elem | null;
                                                                ^^^^ [1]


Error ------------------------------------------------------------------------------------------- HTMLCollection.js:14:4

Cannot get `el.className` because property `className` is missing in null [1]. [incompatible-use]

   HTMLCollection.js:14:4
     14| el.className // invalid
            ^^^^^^^^^

References:
   <BUILTINS>/dom.js:1020:35
   1020|   namedItem(name: string): Elem | null;
                                           ^^^^ [1]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:9:27

Cannot call `element.hasAttributes` because no arguments are expected by function type [1]. [extra-arg]

   HTMLElement.js:9:27
      9|     element.hasAttributes('foo', 'bar');
                                   ^^^^^

References:
   <BUILTINS>/dom.js:1827:3
   1827|   hasAttributes(): boolean;
           ^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:22:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because string [1] is incompatible with literal
union [2] in property `behavior`. [incompatible-call]

   HTMLElement.js:22:28
     22|     element.scrollIntoView({behavior: 'invalid'});
                                    ^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:22:39
     22|     element.scrollIntoView({behavior: 'invalid'});
                                               ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1839:22
   1839|          behavior?: ('auto' | 'instant' | 'smooth'),
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:23:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because string [1] is incompatible with literal
union [2] in property `block`. [incompatible-call]

   HTMLElement.js:23:28
     23|     element.scrollIntoView({block: 'invalid'});
                                    ^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:23:36
     23|     element.scrollIntoView({block: 'invalid'});
                                            ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1840:19
   1840|          block?: ('start' | 'center' | 'end' | 'nearest'),
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:24:28

Cannot call `element.scrollIntoView` with `1` bound to `arg` because number [1] is incompatible with boolean [2].
[incompatible-call]

   HTMLElement.js:24:28
     24|     element.scrollIntoView(1);
                                    ^ [1]

References:
   <BUILTINS>/dom.js:1838:25
   1838|   scrollIntoView(arg?: (boolean | {
                                 ^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:46:6

Cannot cast `element.getElementsByTagName(...)` to `HTMLCollection` because `HTMLAnchorElement` [1] is incompatible with
`HTMLElement` [2] in type argument `Elem` [3]. [incompatible-cast]

   HTMLElement.js:46:6
     46|     (element.getElementsByTagName(str): HTMLCollection<HTMLAnchorElement>);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:46:56
     46|     (element.getElementsByTagName(str): HTMLCollection<HTMLAnchorElement>);
                                                                ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1770:54
   1770|   getElementsByTagName(name: string): HTMLCollection<HTMLElement>;
                                                              ^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:1016:31
   1016| declare class HTMLCollection<+Elem: HTMLElement> {
                                       ^^^^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:47:6

Cannot cast `element.getElementsByTagNameNS(...)` to `HTMLCollection` because `HTMLAnchorElement` [1] is incompatible
with `HTMLElement` [2] in type argument `Elem` [3]. [incompatible-cast]

   HTMLElement.js:47:6
              v------------------------------
     47|     (element.getElementsByTagNameNS(
     48|       null,
     49|       str,
     50|     ): HTMLCollection<HTMLAnchorElement>);
             ^

References:
   HTMLElement.js:50:23
     50|     ): HTMLCollection<HTMLAnchorElement>);
                               ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1824:90
   1824|   getElementsByTagNameNS(namespaceURI: string | null, localName: string): HTMLCollection<HTMLElement>;
                                                                                                  ^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:1016:31
   1016| declare class HTMLCollection<+Elem: HTMLElement> {
                                       ^^^^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:51:6

Cannot cast `element.querySelector(...)` to union type because `HTMLElement` [1] is incompatible with
`HTMLAnchorElement` [2]. [incompatible-cast]

   HTMLElement.js:51:6
     51|     (element.querySelector(str): HTMLAnchorElement | null);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:1929:36
   1929|   querySelector(selector: string): HTMLElement | null;
                                            ^^^^^^^^^^^ [1]
   HTMLElement.js:51:34
     51|     (element.querySelector(str): HTMLAnchorElement | null);
                                          ^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:52:6

Cannot cast `element.querySelectorAll(...)` to `NodeList` because `HTMLAnchorElement` [1] is incompatible with
`HTMLElement` [2] in type argument `T` [3]. [incompatible-cast]

   HTMLElement.js:52:6
     52|     (element.querySelectorAll(str): NodeList<HTMLAnchorElement>);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:52:46
     52|     (element.querySelectorAll(str): NodeList<HTMLAnchorElement>);
                                                      ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1993:48
   1993|   querySelectorAll(selector: string): NodeList<HTMLElement>;
                                                        ^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:980:24
    980| declare class NodeList<T> {
                                ^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:55:6

Cannot cast `element.getElementsByTagName(...)` to `HTMLCollection` because `HTMLAnchorElement` [1] is incompatible with
`HTMLDivElement` [2] in type argument `Elem` [3]. [incompatible-cast]

   HTMLElement.js:55:6
     55|     (element.getElementsByTagName('div'): HTMLCollection<HTMLAnchorElement>);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:55:58
     55|     (element.getElementsByTagName('div'): HTMLCollection<HTMLAnchorElement>);
                                                                  ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1729:53
   1729|   getElementsByTagName(name: 'div'): HTMLCollection<HTMLDivElement>;
                                                             ^^^^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:1016:31
   1016| declare class HTMLCollection<+Elem: HTMLElement> {
                                       ^^^^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:56:6

Cannot cast `element.getElementsByTagNameNS(...)` to `HTMLCollection` because `HTMLAnchorElement` [1] is incompatible
with `HTMLDivElement` [2] in type argument `Elem` [3]. [incompatible-cast]

   HTMLElement.js:56:6
              v------------------------------
     56|     (element.getElementsByTagNameNS(
     57|       null,
     58|       'div',
     59|     ): HTMLCollection<HTMLAnchorElement>);
             ^

References:
   HTMLElement.js:59:23
     59|     ): HTMLCollection<HTMLAnchorElement>);
                               ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1783:89
   1783|   getElementsByTagNameNS(namespaceURI: string | null, localName: 'div'): HTMLCollection<HTMLDivElement>;
                                                                                                 ^^^^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:1016:31
   1016| declare class HTMLCollection<+Elem: HTMLElement> {
                                       ^^^^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:60:6

Cannot cast `element.querySelector(...)` to union type because `HTMLDivElement` [1] is incompatible with
`HTMLAnchorElement` [2]. [incompatible-cast]

   HTMLElement.js:60:6
     60|     (element.querySelector('div'): HTMLAnchorElement | null);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:1882:35
   1882|   querySelector(selector: 'div'): HTMLDivElement | null;
                                           ^^^^^^^^^^^^^^ [1]
   HTMLElement.js:60:36
     60|     (element.querySelector('div'): HTMLAnchorElement | null);
                                            ^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:61:6

Cannot cast `element.querySelectorAll(...)` to `NodeList` because `HTMLDivElement` [1] is incompatible with
`HTMLAnchorElement` [2] in type argument `T` [3]. [incompatible-cast]

   HTMLElement.js:61:6
     61|     (element.querySelectorAll('div'): NodeList<HTMLAnchorElement>);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:1946:47
   1946|   querySelectorAll(selector: 'div'): NodeList<HTMLDivElement>;
                                                       ^^^^^^^^^^^^^^ [1]
   HTMLElement.js:61:48
     61|     (element.querySelectorAll('div'): NodeList<HTMLAnchorElement>);
                                                        ^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:980:24
    980| declare class NodeList<T> {
                                ^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:61:6

Cannot cast `element.querySelectorAll(...)` to `NodeList` because `HTMLAnchorElement` [1] is incompatible with
`HTMLDivElement` [2] in type argument `T` [3]. [incompatible-cast]

   HTMLElement.js:61:6
     61|     (element.querySelectorAll('div'): NodeList<HTMLAnchorElement>);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:61:48
     61|     (element.querySelectorAll('div'): NodeList<HTMLAnchorElement>);
                                                        ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1946:47
   1946|   querySelectorAll(selector: 'div'): NodeList<HTMLDivElement>;
                                                       ^^^^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:980:24
    980| declare class NodeList<T> {
                                ^ [3]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:72:35

Cannot call `element.focus` with object literal bound to `options` because string [1] is incompatible with boolean [2]
in property `preventScroll`. [incompatible-call]

   HTMLElement.js:72:35
     72|     element.focus({preventScroll: 'invalid'});
                                           ^^^^^^^^^ [1]

References:
   <BUILTINS>/dom.js:1662:39
   1662| type FocusOptions = { preventScroll?: boolean, ... }
                                               ^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:73:19

Cannot call `element.focus` with `1` bound to `options` because number [1] is incompatible with `FocusOptions` [2].
[incompatible-call]

   HTMLElement.js:73:19
     73|     element.focus(1);
                           ^ [1]

References:
   <BUILTINS>/dom.js:2005:19
   2005|   focus(options?: FocusOptions): void;
                           ^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ HTMLFormElement.js:23:4

Cannot get `el.className` because property `className` is missing in null [1]. [incompatible-use]

   HTMLFormElement.js:23:4
     23| el.className // invalid
            ^^^^^^^^^

References:
   <BUILTINS>/dom.js:3319:43
   3319|   [index: number | string]: HTMLElement | null;
                                                   ^^^^ [1]


Error ------------------------------------------------------------------------------------------ HTMLFormElement.js:27:4

Cannot get `el.className` because property `className` is missing in null [1]. [incompatible-use]

   HTMLFormElement.js:27:4
     27| el.className // invalid
            ^^^^^^^^^

References:
   <BUILTINS>/dom.js:3319:43
   3319|   [index: number | string]: HTMLElement | null;
                                                   ^^^^ [1]


Error ------------------------------------------------------------------------------------------ HTMLInputElement.js:7:8

Cannot call `el.setRangeText` because number [1] is incompatible with undefined [2]. [incompatible-call]

   HTMLInputElement.js:7:8
      7|     el.setRangeText('foo', 123); // end is required
                ^^^^^^^^^^^^

References:
   HTMLInputElement.js:7:28
      7|     el.setRangeText('foo', 123); // end is required
                                    ^^^ [1]
   <BUILTINS>/dom.js:3700:45
   3700|   setRangeText(replacement: string, start?: void, end?: void, selectMode?: void): void;
                                                     ^^^^ [2]


Error ----------------------------------------------------------------------------------------- HTMLInputElement.js:10:8

Cannot call `el.setRangeText` because string [1] is incompatible with literal union [2]. [incompatible-call]

   HTMLInputElement.js:10:8
     10|     el.setRangeText('foo', 123, 234, 'bogus'); // invalid value
                ^^^^^^^^^^^^

References:
   HTMLInputElement.js:10:38
     10|     el.setRangeText('foo', 123, 234, 'bogus'); // invalid value
                                              ^^^^^^^ [1]
   <BUILTINS>/dom.js:3701:78
   3701|   setRangeText(replacement: string, start: number, end: number, selectMode?: SelectionMode): void;
                                                                                      ^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- HTMLSelectElement.js:11:6

Cannot get `form.action` because property `action` is missing in null [1]. [incompatible-use]

   HTMLSelectElement.js:11:6
     11| form.action // invalid
              ^^^^^^

References:
   <BUILTINS>/dom.js:3763:27
   3763|   form: HTMLFormElement | null;
                                   ^^^^ [1]


Error ---------------------------------------------------------------------------------------- HTMLSelectElement.js:19:6

Cannot get `item.value` because property `value` is missing in null [1]. [incompatible-use]

   HTMLSelectElement.js:19:6
     19| item.value // invalid
              ^^^^^

References:
   <BUILTINS>/dom.js:3781:44
   3781|   item(index: number): HTMLOptionElement | null;
                                                    ^^^^ [1]


Error ---------------------------------------------------------------------------------------- HTMLSelectElement.js:22:6

Cannot get `item.value` because property `value` is missing in null [1]. [incompatible-use]

   HTMLSelectElement.js:22:6
     22| item.value // invalid
              ^^^^^

References:
   <BUILTINS>/dom.js:3782:48
   3782|   namedItem(name: string): HTMLOptionElement | null;
                                                        ^^^^ [1]


Error --------------------------------------------------------------------------------------------- NamedNodeMap.js:9:16

Cannot get `attributes[null]` because: [incompatible-type]
 - Either null [1] is incompatible with number [2].
 - Or null [1] is incompatible with string [3].

   NamedNodeMap.js:9:16
     9|     attributes[null];
                       ^^^^ [1]

References:
   <BUILTINS>/dom.js:997:11
   997|   [index: number | string]: Attr;
                  ^^^^^^ [2]
   <BUILTINS>/dom.js:997:20
   997|   [index: number | string]: Attr;
                           ^^^^^^ [3]


Error -------------------------------------------------------------------------------------------- NamedNodeMap.js:10:16

Cannot get `attributes[{...}]` because: [incompatible-type]
 - Either object literal [1] is incompatible with number [2].
 - Or object literal [1] is incompatible with string [3].

   NamedNodeMap.js:10:16
    10|     attributes[{}];
                       ^^ [1]

References:
   <BUILTINS>/dom.js:997:11
   997|   [index: number | string]: Attr;
                  ^^^^^^ [2]
   <BUILTINS>/dom.js:997:20
   997|   [index: number | string]: Attr;
                           ^^^^^^ [3]


Error ----------------------------------------------------------------------------------------------- ShadowRoot.js:7:10

Cannot assign `true` to `root.delegatesFocus` because property `delegatesFocus` is not writable. [cannot-write]

   7|     root.delegatesFocus = true;
               ^^^^^^^^^^^^^^


Error ---------------------------------------------------------------------------------------------- ShadowRoot.js:13:10

Cannot assign `element` to `root.host` because property `host` is not writable. [cannot-write]

   13|     root.host = element;
                ^^^^


Error ---------------------------------------------------------------------------------------------- ShadowRoot.js:21:22

Cannot assign `true` to `root.innerHTML` because boolean [1] is incompatible with string [2]. [incompatible-type]

   ShadowRoot.js:21:22
    21|     root.innerHTML = true;
                             ^^^^ [1]

References:
   <BUILTINS>/dom.js:155:14
   155|   innerHTML: string;
                     ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- ShadowRoot.js:27:10

Cannot assign `'open'` to `root.mode` because property `mode` is not writable. [cannot-write]

   27|     root.mode = 'open';
                ^^^^


Error ------------------------------------------------------------------------------------------------------ URL.js:8:21

Cannot get `c.path` because property `path` is missing in `URL` [1]. [prop-missing]

   URL.js:8:21
   8| const e: string = c.path; // not correct
                          ^^^^

References:
   URL.js:5:11
   5| const c = new URL('/docs', 'http://flowtype.org/'); // correct
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------- eventtarget.js:9:13

Cannot call `target.attachEvent` because undefined [1] is not a function. [not-a-function]

   eventtarget.js:9:13
     9|     (target.attachEvent('foo', listener): void); // invalid, may be undefined
                    ^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:288:17
   288|   attachEvent?: (type: string, listener: EventListener) => void;
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------- eventtarget.js:16:13

Cannot call `target.detachEvent` because undefined [1] is not a function. [not-a-function]

   eventtarget.js:16:13
    16|     (target.detachEvent('foo', listener): void); // invalid, may be undefined
                    ^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:306:17
   306|   detachEvent?: (type: string, listener: EventListener) => void;
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------- eventtarget.js:22:22

Cannot use `window` as a type because it is an `any`-typed value. Type `window` properly, so it is no longer
`any`-typed, to use it as an annotation. [value-as-type]

   22|       (event.target: window);
                            ^^^^^^


Error -------------------------------------------------------------------------------------------------- path2d.js:16:11

Cannot call `path.arcTo` because string [1] is incompatible with number [2]. [incompatible-call]

   path2d.js:16:11
     16|     (path.arcTo(0, 0, 0, 0, 10, '20', 5): void); // invalid
                   ^^^^^

References:
   path2d.js:16:33
     16|     (path.arcTo(0, 0, 0, 0, 10, '20', 5): void); // invalid
                                         ^^^^ [1]
   <BUILTINS>/dom.js:2255:83
   2255|   arcTo(x1: number, y1: number, x2: number, y2: number, radiusX: number, radiusY: number, rotation: number): void;
                                                                                           ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- registerElement.js:52:19

Cannot call `document.registerElement` with object literal bound to `options` because string [1] is incompatible with
null [2] in the second parameter of property `prototype.attributeChangedCallback`. [incompatible-call]

   registerElement.js:52:19
     52|           oldVal: string, // Error: This might be null
                           ^^^^^^ [1]

References:
   <BUILTINS>/dom.js:1037:36
   1037|                 oldAttributeValue: null,
                                            ^^^^ [2]


Error ----------------------------------------------------------------------------------------- registerElement.js:53:19

Cannot call `document.registerElement` with object literal bound to `options` because string [1] is incompatible with
null [2] in the third parameter of property `prototype.attributeChangedCallback`. [incompatible-call]

   registerElement.js:53:19
     53|           newVal: string, // Error: This might be null
                           ^^^^^^ [1]

References:
   <BUILTINS>/dom.js:1052:36
   1052|                 newAttributeValue: null,
                                            ^^^^ [2]


Error ----------------------------------------------------------------------------------------------- traversal.js:29:14

Cannot call `document.createNodeIterator` because: [incompatible-call]
 - Either object literal [1] is incompatible with `Attr` [2].
 - Or object literal [1] is incompatible with `Document` [3].
 - Or object literal [1] is incompatible with `Document` [4].
 - Or object literal [1] is incompatible with `Document` [5].
 - Or object literal [1] is incompatible with `Document` [6].
 - Or object literal [1] is incompatible with `Document` [7].
 - Or object literal [1] is incompatible with `Document` [8].
 - Or object literal [1] is incompatible with `Document` [9].
 - Or object literal [1] is incompatible with `Document` [10].
 - Or object literal [1] is incompatible with `Document` [11].
 - Or object literal [1] is incompatible with `Document` [12].
 - Or object literal [1] is incompatible with `Document` [13].
 - Or object literal [1] is incompatible with `Document` [14].
 - Or object literal [1] is incompatible with `Document` [15].
 - Or object literal [1] is incompatible with `Document` [16].
 - Or object literal [1] is incompatible with `Document` [17].
 - Or object literal [1] is incompatible with `Document` [18].
 - Or object literal [1] is incompatible with `Document` [19].
 - Or object literal [1] is incompatible with `Document` [20].
 - Or object literal [1] is incompatible with `Document` [21].
 - Or object literal [1] is incompatible with `Document` [22].
 - Or object literal [1] is incompatible with `Document` [23].
 - Or object literal [1] is incompatible with `Document` [24].
 - Or object literal [1] is incompatible with `Document` [25].
 - Or object literal [1] is incompatible with `Document` [26].
 - Or object literal [1] is incompatible with `DocumentFragment` [27].
 - Or object literal [1] is incompatible with `DocumentFragment` [28].
 - Or object literal [1] is incompatible with `DocumentFragment` [29].
 - Or object literal [1] is incompatible with `DocumentFragment` [30].
 - Or object literal [1] is incompatible with `DocumentFragment` [31].
 - Or object literal [1] is incompatible with `DocumentFragment` [32].
 - Or object literal [1] is incompatible with `DocumentFragment` [33].
 - Or object literal [1] is incompatible with `DocumentFragment` [34].
 - Or object literal [1] is incompatible with `Node` [35].
 - Or object literal [1] is incompatible with `Node` [36].
 - Or object literal [1] is incompatible with `Node` [37].
 - Or object literal [1] is incompatible with `Node` [38].
 - Or object literal [1] is incompatible with `Node` [39].
 - Or object literal [1] is incompatible with `Node` [40].
 - Or object literal [1] is incompatible with `Node` [41].
 - Or object literal [1] is incompatible with `Node` [42].

   traversal.js:29:14
     29|     document.createNodeIterator({}); // invalid
                      ^^^^^^^^^^^^^^^^^^

References:
   traversal.js:29:33
     29|     document.createNodeIterator({}); // invalid
                                         ^^ [1]
   <BUILTINS>/dom.js:1480:33
   1480|   createNodeIterator<RootNodeT: Attr>(root: RootNodeT, whatToShow: 2, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Attr>;
                                         ^^^^ [2]
   <BUILTINS>/dom.js:1488:33
   1488|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 256, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document>;
                                         ^^^^^^^^ [3]
   <BUILTINS>/dom.js:1489:33
   1489|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 257, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element>;
                                         ^^^^^^^^ [4]
   <BUILTINS>/dom.js:1490:33
   1490|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 260, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Text>;
                                         ^^^^^^^^ [5]
   <BUILTINS>/dom.js:1491:33
   1491|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 261, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element|Text>;
                                         ^^^^^^^^ [6]
   <BUILTINS>/dom.js:1492:33
   1492|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 384, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Comment>;
                                         ^^^^^^^^ [7]
   <BUILTINS>/dom.js:1493:33
   1493|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 385, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element|Comment>;
                                         ^^^^^^^^ [8]
   <BUILTINS>/dom.js:1494:33
   1494|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 388, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Text|Comment>;
                                         ^^^^^^^^ [9]
   <BUILTINS>/dom.js:1495:33
   1495|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 389, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element|Text|Comment>;
                                         ^^^^^^^^ [10]
   <BUILTINS>/dom.js:1496:33
   1496|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 512, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType>;
                                         ^^^^^^^^ [11]
   <BUILTINS>/dom.js:1497:33
   1497|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 513, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element>;
                                         ^^^^^^^^ [12]
   <BUILTINS>/dom.js:1498:33
   1498|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 516, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Text>;
                                         ^^^^^^^^ [13]
   <BUILTINS>/dom.js:1499:33
   1499|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 517, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element|Text>;
                                         ^^^^^^^^ [14]
   <BUILTINS>/dom.js:1500:33
   1500|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 640, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Comment>;
                                         ^^^^^^^^ [15]
   <BUILTINS>/dom.js:1501:33
   1501|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 641, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element|Comment>;
                                         ^^^^^^^^ [16]
   <BUILTINS>/dom.js:1502:33
   1502|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 644, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Text|Comment>;
                                         ^^^^^^^^ [17]
   <BUILTINS>/dom.js:1503:33
   1503|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 645, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element|Text|Comment>;
                                         ^^^^^^^^ [18]
   <BUILTINS>/dom.js:1504:33
   1504|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 768, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document>;
                                         ^^^^^^^^ [19]
   <BUILTINS>/dom.js:1505:33
   1505|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 769, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element>;
                                         ^^^^^^^^ [20]
   <BUILTINS>/dom.js:1506:33
   1506|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 772, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Text>;
                                         ^^^^^^^^ [21]
   <BUILTINS>/dom.js:1507:33
   1507|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 773, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element|Text>;
                                         ^^^^^^^^ [22]
   <BUILTINS>/dom.js:1508:33
   1508|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 896, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Comment>;
                                         ^^^^^^^^ [23]
   <BUILTINS>/dom.js:1509:33
   1509|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 897, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element|Comment>;
                                         ^^^^^^^^ [24]
   <BUILTINS>/dom.js:1510:33
   1510|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 900, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Text|Comment>;
                                         ^^^^^^^^ [25]
   <BUILTINS>/dom.js:1511:33
   1511|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 901, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element|Text|Comment>;
                                         ^^^^^^^^ [26]
   <BUILTINS>/dom.js:1539:33
   1539|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1024, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment>;
                                         ^^^^^^^^^^^^^^^^ [27]
   <BUILTINS>/dom.js:1540:33
   1540|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1025, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element>;
                                         ^^^^^^^^^^^^^^^^ [28]
   <BUILTINS>/dom.js:1541:33
   1541|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1028, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Text>;
                                         ^^^^^^^^^^^^^^^^ [29]
   <BUILTINS>/dom.js:1542:33
   1542|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1029, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element|Text>;
                                         ^^^^^^^^^^^^^^^^ [30]
   <BUILTINS>/dom.js:1543:33
   1543|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1152, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Comment>;
                                         ^^^^^^^^^^^^^^^^ [31]
   <BUILTINS>/dom.js:1544:33
   1544|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1153, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element|Comment>;
                                         ^^^^^^^^^^^^^^^^ [32]
   <BUILTINS>/dom.js:1545:33
   1545|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1156, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Text|Comment>;
                                         ^^^^^^^^^^^^^^^^ [33]
   <BUILTINS>/dom.js:1546:33
   1546|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1157, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element|Text|Comment>;
                                         ^^^^^^^^^^^^^^^^ [34]
   <BUILTINS>/dom.js:1559:33
   1559|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element>;
                                         ^^^^ [35]
   <BUILTINS>/dom.js:1560:33
   1560|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text>;
                                         ^^^^ [36]
   <BUILTINS>/dom.js:1561:33
   1561|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Text>;
                                         ^^^^ [37]
   <BUILTINS>/dom.js:1562:33
   1562|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Comment>;
                                         ^^^^ [38]
   <BUILTINS>/dom.js:1563:33
   1563|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Comment>;
                                         ^^^^ [39]
   <BUILTINS>/dom.js:1564:33
   1564|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Comment>;
                                         ^^^^ [40]
   <BUILTINS>/dom.js:1565:33
   1565|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Element|Comment>;
                                         ^^^^ [41]
   <BUILTINS>/dom.js:1576:33
   1576|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow?: number, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Node>;
                                         ^^^^ [42]


Error ----------------------------------------------------------------------------------------------- traversal.js:33:14

Cannot call `document.createTreeWalker` because: [incompatible-call]
 - Either object literal [1] is incompatible with `Attr` [2].
 - Or object literal [1] is incompatible with `Document` [3].
 - Or object literal [1] is incompatible with `Document` [4].
 - Or object literal [1] is incompatible with `Document` [5].
 - Or object literal [1] is incompatible with `Document` [6].
 - Or object literal [1] is incompatible with `Document` [7].
 - Or object literal [1] is incompatible with `Document` [8].
 - Or object literal [1] is incompatible with `Document` [9].
 - Or object literal [1] is incompatible with `Document` [10].
 - Or object literal [1] is incompatible with `Document` [11].
 - Or object literal [1] is incompatible with `Document` [12].
 - Or object literal [1] is incompatible with `Document` [13].
 - Or object literal [1] is incompatible with `Document` [14].
 - Or object literal [1] is incompatible with `Document` [15].
 - Or object literal [1] is incompatible with `Document` [16].
 - Or object literal [1] is incompatible with `Document` [17].
 - Or object literal [1] is incompatible with `Document` [18].
 - Or object literal [1] is incompatible with `Document` [19].
 - Or object literal [1] is incompatible with `Document` [20].
 - Or object literal [1] is incompatible with `Document` [21].
 - Or object literal [1] is incompatible with `Document` [22].
 - Or object literal [1] is incompatible with `Document` [23].
 - Or object literal [1] is incompatible with `Document` [24].
 - Or object literal [1] is incompatible with `Document` [25].
 - Or object literal [1] is incompatible with `Document` [26].
 - Or object literal [1] is incompatible with `DocumentFragment` [27].
 - Or object literal [1] is incompatible with `DocumentFragment` [28].
 - Or object literal [1] is incompatible with `DocumentFragment` [29].
 - Or object literal [1] is incompatible with `DocumentFragment` [30].
 - Or object literal [1] is incompatible with `DocumentFragment` [31].
 - Or object literal [1] is incompatible with `DocumentFragment` [32].
 - Or object literal [1] is incompatible with `DocumentFragment` [33].
 - Or object literal [1] is incompatible with `DocumentFragment` [34].
 - Or object literal [1] is incompatible with `Node` [35].
 - Or object literal [1] is incompatible with `Node` [36].
 - Or object literal [1] is incompatible with `Node` [37].
 - Or object literal [1] is incompatible with `Node` [38].
 - Or object literal [1] is incompatible with `Node` [39].
 - Or object literal [1] is incompatible with `Node` [40].
 - Or object literal [1] is incompatible with `Node` [41].
 - Or object literal [1] is incompatible with `Node` [42].

   traversal.js:33:14
     33|     document.createTreeWalker({}); // invalid
                      ^^^^^^^^^^^^^^^^

References:
   traversal.js:33:31
     33|     document.createTreeWalker({}); // invalid
                                       ^^ [1]
   <BUILTINS>/dom.js:1481:31
   1481|   createTreeWalker<RootNodeT: Attr>(root: RootNodeT, whatToShow: 2, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Attr>;
                                       ^^^^ [2]
   <BUILTINS>/dom.js:1512:31
   1512|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 256, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document>;
                                       ^^^^^^^^ [3]
   <BUILTINS>/dom.js:1513:31
   1513|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 257, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element>;
                                       ^^^^^^^^ [4]
   <BUILTINS>/dom.js:1514:31
   1514|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 260, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Text>;
                                       ^^^^^^^^ [5]
   <BUILTINS>/dom.js:1515:31
   1515|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 261, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element|Text>;
                                       ^^^^^^^^ [6]
   <BUILTINS>/dom.js:1516:31
   1516|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 384, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Comment>;
                                       ^^^^^^^^ [7]
   <BUILTINS>/dom.js:1517:31
   1517|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 385, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element|Comment>;
                                       ^^^^^^^^ [8]
   <BUILTINS>/dom.js:1518:31
   1518|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 388, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Text|Comment>;
                                       ^^^^^^^^ [9]
   <BUILTINS>/dom.js:1519:31
   1519|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 389, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element|Text|Comment>;
                                       ^^^^^^^^ [10]
   <BUILTINS>/dom.js:1520:31
   1520|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 512, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType>;
                                       ^^^^^^^^ [11]
   <BUILTINS>/dom.js:1521:31
   1521|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 513, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element>;
                                       ^^^^^^^^ [12]
   <BUILTINS>/dom.js:1522:31
   1522|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 516, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Text>;
                                       ^^^^^^^^ [13]
   <BUILTINS>/dom.js:1523:31
   1523|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 517, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element|Text>;
                                       ^^^^^^^^ [14]
   <BUILTINS>/dom.js:1524:31
   1524|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 640, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Comment>;
                                       ^^^^^^^^ [15]
   <BUILTINS>/dom.js:1525:31
   1525|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 641, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element|Comment>;
                                       ^^^^^^^^ [16]
   <BUILTINS>/dom.js:1526:31
   1526|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 644, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Text|Comment>;
                                       ^^^^^^^^ [17]
   <BUILTINS>/dom.js:1527:31
   1527|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 645, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element|Text|Comment>;
                                       ^^^^^^^^ [18]
   <BUILTINS>/dom.js:1528:31
   1528|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 768, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document>;
                                       ^^^^^^^^ [19]
   <BUILTINS>/dom.js:1529:31
   1529|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 769, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element>;
                                       ^^^^^^^^ [20]
   <BUILTINS>/dom.js:1530:31
   1530|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 772, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Text>;
                                       ^^^^^^^^ [21]
   <BUILTINS>/dom.js:1531:31
   1531|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 773, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element|Text>;
                                       ^^^^^^^^ [22]
   <BUILTINS>/dom.js:1532:31
   1532|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 896, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Comment>;
                                       ^^^^^^^^ [23]
   <BUILTINS>/dom.js:1533:31
   1533|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 897, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element|Comment>;
                                       ^^^^^^^^ [24]
   <BUILTINS>/dom.js:1534:31
   1534|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 900, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Text|Comment>;
                                       ^^^^^^^^ [25]
   <BUILTINS>/dom.js:1535:31
   1535|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 901, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element|Text|Comment>;
                                       ^^^^^^^^ [26]
   <BUILTINS>/dom.js:1547:31
   1547|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1024, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment>;
                                       ^^^^^^^^^^^^^^^^ [27]
   <BUILTINS>/dom.js:1548:31
   1548|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1025, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element>;
                                       ^^^^^^^^^^^^^^^^ [28]
   <BUILTINS>/dom.js:1549:31
   1549|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1028, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Text>;
                                       ^^^^^^^^^^^^^^^^ [29]
   <BUILTINS>/dom.js:1550:31
   1550|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1029, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element|Text>;
                                       ^^^^^^^^^^^^^^^^ [30]
   <BUILTINS>/dom.js:1551:31
   1551|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1152, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Comment>;
                                       ^^^^^^^^^^^^^^^^ [31]
   <BUILTINS>/dom.js:1552:31
   1552|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1153, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element|Comment>;
                                       ^^^^^^^^^^^^^^^^ [32]
   <BUILTINS>/dom.js:1553:31
   1553|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1156, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Text|Comment>;
                                       ^^^^^^^^^^^^^^^^ [33]
   <BUILTINS>/dom.js:1554:31
   1554|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1157, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element|Text|Comment>;
                                       ^^^^^^^^^^^^^^^^ [34]
   <BUILTINS>/dom.js:1566:31
   1566|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element>;
                                       ^^^^ [35]
   <BUILTINS>/dom.js:1567:31
   1567|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text>;
                                       ^^^^ [36]
   <BUILTINS>/dom.js:1568:31
   1568|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Text>;
                                       ^^^^ [37]
   <BUILTINS>/dom.js:1569:31
   1569|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Comment>;
                                       ^^^^ [38]
   <BUILTINS>/dom.js:1570:31
   1570|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Comment>;
                                       ^^^^ [39]
   <BUILTINS>/dom.js:1571:31
   1571|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Comment>;
                                       ^^^^ [40]
   <BUILTINS>/dom.js:1572:31
   1572|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Element|Comment>;
                                       ^^^^ [41]
   <BUILTINS>/dom.js:1577:31
   1577|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow?: number, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Node>;
                                       ^^^^ [42]


Error ---------------------------------------------------------------------------------------------- traversal.js:186:60

Cannot call `document.createNodeIterator` with function bound to `filter` because string [1] is incompatible with
literal union [2] in the return value. [incompatible-call]

   traversal.js:186:60
    186|     document.createNodeIterator(document_body, -1, node => 'accept'); // invalid
                                                                    ^^^^^^^^ [1]

References:
   <BUILTINS>/dom.js:4244:1
         v--------------------------------
   4244| typeof NodeFilter.FILTER_ACCEPT |
   4245| typeof NodeFilter.FILTER_REJECT |
   4246| typeof NodeFilter.FILTER_SKIP;
         ----------------------------^ [2]


Error ---------------------------------------------------------------------------------------------- traversal.js:188:74

Cannot call `document.createNodeIterator` with object literal bound to `filter` because string [1] is incompatible with
literal union [2] in the return value of property `acceptNode`. [incompatible-call]

   traversal.js:188:74
    188|     document.createNodeIterator(document_body, -1, { acceptNode: node => 'accept' }); // invalid
                                                                                  ^^^^^^^^ [1]

References:
   <BUILTINS>/dom.js:4244:1
         v--------------------------------
   4244| typeof NodeFilter.FILTER_ACCEPT |
   4245| typeof NodeFilter.FILTER_REJECT |
   4246| typeof NodeFilter.FILTER_SKIP;
         ----------------------------^ [2]


Error ---------------------------------------------------------------------------------------------- traversal.js:189:14

Cannot call `document.createNodeIterator` because: [incompatible-call]
 - Either number [1] is incompatible with number literal `1` [2].
 - Or number [1] is incompatible with number literal `4` [3].
 - Or number [1] is incompatible with number literal `5` [4].
 - Or number [1] is incompatible with number literal `128` [5].
 - Or number [1] is incompatible with number literal `129` [6].
 - Or number [1] is incompatible with number literal `132` [7].
 - Or number [1] is incompatible with number literal `133` [8].

   traversal.js:189:14
    189|     document.createNodeIterator(document_body, -1, {}); // invalid
                      ^^^^^^^^^^^^^^^^^^

References:
   traversal.js:189:48
    189|     document.createNodeIterator(document_body, -1, {}); // invalid
                                                        ^^ [1]
   <BUILTINS>/dom.js:1559:68
   1559|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element>;
                                                                            ^ [2]
   <BUILTINS>/dom.js:1560:68
   1560|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text>;
                                                                            ^ [3]
   <BUILTINS>/dom.js:1561:68
   1561|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Text>;
                                                                            ^ [4]
   <BUILTINS>/dom.js:1562:68
   1562|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Comment>;
                                                                            ^^^ [5]
   <BUILTINS>/dom.js:1563:68
   1563|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Comment>;
                                                                            ^^^ [6]
   <BUILTINS>/dom.js:1564:68
   1564|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Comment>;
                                                                            ^^^ [7]
   <BUILTINS>/dom.js:1565:68
   1565|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Element|Comment>;
                                                                            ^^^ [8]


Error ---------------------------------------------------------------------------------------------- traversal.js:193:58

Cannot call `document.createTreeWalker` with function bound to `filter` because string [1] is incompatible with literal
union [2] in the return value. [incompatible-call]

   traversal.js:193:58
    193|     document.createTreeWalker(document_body, -1, node => 'accept'); // invalid
                                                                  ^^^^^^^^ [1]

References:
   <BUILTINS>/dom.js:4244:1
         v--------------------------------
   4244| typeof NodeFilter.FILTER_ACCEPT |
   4245| typeof NodeFilter.FILTER_REJECT |
   4246| typeof NodeFilter.FILTER_SKIP;
         ----------------------------^ [2]


Error ---------------------------------------------------------------------------------------------- traversal.js:195:72

Cannot call `document.createTreeWalker` with object literal bound to `filter` because string [1] is incompatible with
literal union [2] in the return value of property `acceptNode`. [incompatible-call]

   traversal.js:195:72
    195|     document.createTreeWalker(document_body, -1, { acceptNode: node => 'accept' }); // invalid
                                                                                ^^^^^^^^ [1]

References:
   <BUILTINS>/dom.js:4244:1
         v--------------------------------
   4244| typeof NodeFilter.FILTER_ACCEPT |
   4245| typeof NodeFilter.FILTER_REJECT |
   4246| typeof NodeFilter.FILTER_SKIP;
         ----------------------------^ [2]


Error ---------------------------------------------------------------------------------------------- traversal.js:196:14

Cannot call `document.createTreeWalker` because: [incompatible-call]
 - Either number [1] is incompatible with number literal `1` [2].
 - Or number [1] is incompatible with number literal `4` [3].
 - Or number [1] is incompatible with number literal `5` [4].
 - Or number [1] is incompatible with number literal `128` [5].
 - Or number [1] is incompatible with number literal `129` [6].
 - Or number [1] is incompatible with number literal `132` [7].
 - Or number [1] is incompatible with number literal `133` [8].

   traversal.js:196:14
    196|     document.createTreeWalker(document_body, -1, {}); // invalid
                      ^^^^^^^^^^^^^^^^

References:
   traversal.js:196:46
    196|     document.createTreeWalker(document_body, -1, {}); // invalid
                                                      ^^ [1]
   <BUILTINS>/dom.js:1566:66
   1566|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element>;
                                                                          ^ [2]
   <BUILTINS>/dom.js:1567:66
   1567|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text>;
                                                                          ^ [3]
   <BUILTINS>/dom.js:1568:66
   1568|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Text>;
                                                                          ^ [4]
   <BUILTINS>/dom.js:1569:66
   1569|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Comment>;
                                                                          ^^^ [5]
   <BUILTINS>/dom.js:1570:66
   1570|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Comment>;
                                                                          ^^^ [6]
   <BUILTINS>/dom.js:1571:66
   1571|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Comment>;
                                                                          ^^^ [7]
   <BUILTINS>/dom.js:1572:66
   1572|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Element|Comment>;
                                                                          ^^^ [8]



Found 54 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
