Error ------------------------------------------------------------------------------------------------------ test.js:5:7

Cannot compare number literal `3` [1] to string literal `A` [2] with a non-strict equality check. Make sure the
arguments are valid, or try using strict equality (`===` or `!==`) instead. [invalid-compare]

   test.js:5:7
   5|   if (o1 == o2) { // error
            ^^

References:
   test.js:4:21
   4| function foo1 (o1 : T, o2 : U) {
                          ^ [1]
   test.js:4:29
   4| function foo1 (o1 : T, o2 : U) {
                                  ^ [2]


Error ------------------------------------------------------------------------------------------------------ test.js:5:7

Cannot compare number literal `3` [1] to string literal `B` [2] with a non-strict equality check. Make sure the
arguments are valid, or try using strict equality (`===` or `!==`) instead. [invalid-compare]

   test.js:5:7
   5|   if (o1 == o2) { // error
            ^^

References:
   test.js:4:21
   4| function foo1 (o1 : T, o2 : U) {
                          ^ [1]
   test.js:4:29
   4| function foo1 (o1 : T, o2 : U) {
                                  ^ [2]


Error ------------------------------------------------------------------------------------------------------ test.js:5:7

Cannot compare number literal `4` [1] to string literal `A` [2] with a non-strict equality check. Make sure the
arguments are valid, or try using strict equality (`===` or `!==`) instead. [invalid-compare]

   test.js:5:7
   5|   if (o1 == o2) { // error
            ^^

References:
   test.js:4:21
   4| function foo1 (o1 : T, o2 : U) {
                          ^ [1]
   test.js:4:29
   4| function foo1 (o1 : T, o2 : U) {
                                  ^ [2]


Error ------------------------------------------------------------------------------------------------------ test.js:5:7

Cannot compare number literal `4` [1] to string literal `B` [2] with a non-strict equality check. Make sure the
arguments are valid, or try using strict equality (`===` or `!==`) instead. [invalid-compare]

   test.js:5:7
   5|   if (o1 == o2) { // error
            ^^

References:
   test.js:4:21
   4| function foo1 (o1 : T, o2 : U) {
                          ^ [1]
   test.js:4:29
   4| function foo1 (o1 : T, o2 : U) {
                                  ^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:14:7

Cannot compare number literal `1` [1] to string literal `B` [2] with a non-strict equality check. Make sure the
arguments are valid, or try using strict equality (`===` or `!==`) instead. [invalid-compare]

   test.js:14:7
   14|   if (o1 == o2) { // error
             ^^

References:
   test.js:13:21
   13| function foo2 (o1 : A, o2 : B) {
                           ^ [1]
   test.js:13:29
   13| function foo2 (o1 : A, o2 : B) {
                                   ^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:14:7

Cannot compare number literal `1` [1] to string literal `C` [2] with a non-strict equality check. Make sure the
arguments are valid, or try using strict equality (`===` or `!==`) instead. [invalid-compare]

   test.js:14:7
   14|   if (o1 == o2) { // error
             ^^

References:
   test.js:13:21
   13| function foo2 (o1 : A, o2 : B) {
                           ^ [1]
   test.js:13:29
   13| function foo2 (o1 : A, o2 : B) {
                                   ^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:14:7

Cannot compare number literal `2` [1] to string literal `B` [2] with a non-strict equality check. Make sure the
arguments are valid, or try using strict equality (`===` or `!==`) instead. [invalid-compare]

   test.js:14:7
   14|   if (o1 == o2) { // error
             ^^

References:
   test.js:13:21
   13| function foo2 (o1 : A, o2 : B) {
                           ^ [1]
   test.js:13:29
   13| function foo2 (o1 : A, o2 : B) {
                                   ^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:14:7

Cannot compare number literal `2` [1] to string literal `C` [2] with a non-strict equality check. Make sure the
arguments are valid, or try using strict equality (`===` or `!==`) instead. [invalid-compare]

   test.js:14:7
   14|   if (o1 == o2) { // error
             ^^

References:
   test.js:13:21
   13| function foo2 (o1 : A, o2 : B) {
                           ^ [1]
   test.js:13:29
   13| function foo2 (o1 : A, o2 : B) {
                                   ^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:14:7

Cannot compare string literal `A` [1] to number literal `3` [2] with a non-strict equality check. Make sure the
arguments are valid, or try using strict equality (`===` or `!==`) instead. [invalid-compare]

   test.js:14:7
   14|   if (o1 == o2) { // error
             ^^

References:
   test.js:13:21
   13| function foo2 (o1 : A, o2 : B) {
                           ^ [1]
   test.js:13:29
   13| function foo2 (o1 : A, o2 : B) {
                                   ^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:25:1

Cannot compare number [1] to string [2] with a non-strict equality check. Make sure the arguments are valid, or try
using strict equality (`===` or `!==`) instead. [invalid-compare]

   test.js:25:1
   25| x1 != y1; // error
       ^^

References:
   test.js:23:17
   23| declare var x1: number | string;
                       ^^^^^^ [1]
   test.js:24:26
   24| declare var y1: number | string;
                                ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:25:1

Cannot compare string [1] to number [2] with a non-strict equality check. Make sure the arguments are valid, or try
using strict equality (`===` or `!==`) instead. [invalid-compare]

   test.js:25:1
   25| x1 != y1; // error
       ^^

References:
   test.js:23:26
   23| declare var x1: number | string;
                                ^^^^^^ [1]
   test.js:24:17
   24| declare var y1: number | string;
                       ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:29:1

Cannot compare number [1] to string [2] with a non-strict equality check. Make sure the arguments are valid, or try
using strict equality (`===` or `!==`) instead. [invalid-compare]

   test.js:29:1
   29| x2 != y2; // errors
       ^^

References:
   test.js:27:17
   27| const x2 = (1: ?number) || "";
                       ^^^^^^ [1]
   test.js:28:28
   28| const y2 = (1: ?number) || "";
                                  ^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:29:1

Cannot compare string [1] to number [2] with a non-strict equality check. Make sure the arguments are valid, or try
using strict equality (`===` or `!==`) instead. [invalid-compare]

   test.js:29:1
   29| x2 != y2; // errors
       ^^

References:
   test.js:27:28
   27| const x2 = (1: ?number) || "";
                                  ^^ [1]
   test.js:28:17
   28| const y2 = (1: ?number) || "";
                       ^^^^^^ [2]



Found 13 errors
