Error ------------------------------------------------------------------------------------------------------ test.js:7:8

Invalid check of string literal `bar` against `Literal` [1] because string literal `bar` [2] is incompatible with string
literal `foo` [1]. [incompatible-type]

   test.js:7:8
   7|   case 'bar': // Error
             ^^^^^ [2]

References:
   test.js:2:16
   2| declare var x: Literal;
                     ^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------------------ test.js:8:8

Invalid check of number literal `1` against `Literal` [1] because number literal `1` [2] is incompatible with string
literal `foo` [1]. [incompatible-type]

   test.js:8:8
   8|   case 1: // Error
             ^ [2]

References:
   test.js:2:16
   2| declare var x: Literal;
                     ^^^^^^^ [1]


Error ----------------------------------------------------------------------------------------------------- test.js:14:8

Cannot compare string [1] with property `p` of `o` [2] because string [1] is incompatible with string literal `foo` [3].
[incompatible-type]

   test.js:14:8
   14|   case 'bar': // Error
              ^^^^^ [1]

References:
   test.js:3:13
    3| declare var o: {p: Literal}
                   ^ [2]
   test.js:3:20
    3| declare var o: {p: Literal}
                          ^^^^^^^ [3]


Error ----------------------------------------------------------------------------------------------------- test.js:15:8

Cannot compare number [1] with property `p` of `o` [2] because number [1] is incompatible with string literal `foo` [3].
[incompatible-type]

   test.js:15:8
   15|   case 1: // Error
              ^ [1]

References:
   test.js:3:13
    3| declare var o: {p: Literal}
                   ^ [2]
   test.js:3:20
    3| declare var o: {p: Literal}
                          ^^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------------- test.js:20:11

Invalid check of string literal `bar` against `Literal` [1] because string literal `bar` [2] is incompatible with string
literal `foo` [1]. [incompatible-type]

   test.js:20:11
   20| if (x === 'bar') {} // Error
                 ^^^^^ [2]

References:
   test.js:2:16
    2| declare var x: Literal;
                      ^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:21:11

Invalid check of number literal `1` against `Literal` [1] because number literal `1` [2] is incompatible with string
literal `foo` [1]. [incompatible-type]

   test.js:21:11
   21| if (x === 1) {} // Error
                 ^ [2]

References:
   test.js:2:16
    2| declare var x: Literal;
                      ^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:24:13

Cannot compare string [1] with property `p` of `o` [2] because string [1] is incompatible with string literal `foo` [3].
[incompatible-type]

   test.js:24:13
   24| if (o.p === 'bar') {} // Error
                   ^^^^^ [1]

References:
   test.js:3:13
    3| declare var o: {p: Literal}
                   ^ [2]
   test.js:3:20
    3| declare var o: {p: Literal}
                          ^^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------------- test.js:25:13

Cannot compare number [1] with property `p` of `o` [2] because number [1] is incompatible with string literal `foo` [3].
[incompatible-type]

   test.js:25:13
   25| if (o.p === 1) {} // Error
                   ^ [1]

References:
   test.js:3:13
    3| declare var o: {p: Literal}
                   ^ [2]
   test.js:3:20
    3| declare var o: {p: Literal}
                          ^^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------------- test.js:28:29

Invalid check of string literal `bar` against `Literal` [1] because string literal `bar` [2] is incompatible with string
literal `foo` [1]. [incompatible-type]

   test.js:28:29
   28| if (true && (false || x === 'bar')) {} // Error
                                   ^^^^^ [2]

References:
   test.js:2:16
    2| declare var x: Literal;
                      ^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:29:31

Cannot compare string [1] with property `p` of `o` [2] because string [1] is incompatible with string literal `foo` [3].
[incompatible-type]

   test.js:29:31
   29| if (true && (false || o.p === 'bar')) {} // Error
                                     ^^^^^ [1]

References:
   test.js:3:13
    3| declare var o: {p: Literal}
                   ^ [2]
   test.js:3:20
    3| declare var o: {p: Literal}
                          ^^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------------- test.js:30:29

Invalid check of number literal `1` against `Literal` [1] because number literal `1` [2] is incompatible with string
literal `foo` [1]. [incompatible-type]

   test.js:30:29
   30| if (true && (false || x === 1)) {} // Error
                                   ^ [2]

References:
   test.js:2:16
    2| declare var x: Literal;
                      ^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:31:31

Cannot compare number [1] with property `p` of `o` [2] because number [1] is incompatible with string literal `foo` [3].
[incompatible-type]

   test.js:31:31
   31| if (true && (false || o.p === 1)) {} // Error
                                     ^ [1]

References:
   test.js:3:13
    3| declare var o: {p: Literal}
                   ^ [2]
   test.js:3:20
    3| declare var o: {p: Literal}
                          ^^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------------- test.js:39:10

Invalid check of string literal `bar` against nullable `Literal` [1] because string literal `bar` [2] is incompatible
with string literal `foo` [3]. [incompatible-type]

   test.js:39:10
   39|     case 'bar': // Error
                ^^^^^ [2]

References:
   test.js:33:24
   33| declare var nullableX: ?Literal;
                              ^^^^^^^^ [1]
   test.js:33:25
   33| declare var nullableX: ?Literal;
                               ^^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------------- test.js:40:10

Invalid check of number literal `1` against nullable `Literal` [1] because number literal `1` [2] is incompatible with
string literal `foo` [3]. [incompatible-type]

   test.js:40:10
   40|     case 1: // Error
                ^ [2]

References:
   test.js:33:24
   33| declare var nullableX: ?Literal;
                              ^^^^^^^^ [1]
   test.js:33:25
   33| declare var nullableX: ?Literal;
                               ^^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------------- test.js:46:10

Cannot compare string [1] with property `p` of `nullableO` [2] because string [1] is incompatible with string literal
`foo` [3]. [incompatible-type]

   test.js:46:10
   46|     case 'bar': // Error
                ^^^^^ [1]

References:
   test.js:34:13
   34| declare var nullableO: ?{p: Literal}
                   ^^^^^^^^^ [2]
   test.js:34:29
   34| declare var nullableO: ?{p: Literal}
                                   ^^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------------- test.js:47:10

Cannot compare number [1] with property `p` of `nullableO` [2] because number [1] is incompatible with string literal
`foo` [3]. [incompatible-type]

   test.js:47:10
   47|     case 1: // Error
                ^ [1]

References:
   test.js:34:13
   34| declare var nullableO: ?{p: Literal}
                   ^^^^^^^^^ [2]
   test.js:34:29
   34| declare var nullableO: ?{p: Literal}
                                   ^^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------------- test.js:54:21

Invalid check of string literal `bar` against nullable `Literal` [1] because string literal `bar` [2] is incompatible
with string literal `foo` [3]. [incompatible-type]

   test.js:54:21
   54|   if (nullableX === 'bar') {} // Error
                           ^^^^^ [2]

References:
   test.js:33:24
   33| declare var nullableX: ?Literal;
                              ^^^^^^^^ [1]
   test.js:33:25
   33| declare var nullableX: ?Literal;
                               ^^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------------- test.js:55:21

Invalid check of number literal `1` against nullable `Literal` [1] because number literal `1` [2] is incompatible with
string literal `foo` [3]. [incompatible-type]

   test.js:55:21
   55|   if (nullableX === 1) {} // Error
                           ^ [2]

References:
   test.js:33:24
   33| declare var nullableX: ?Literal;
                              ^^^^^^^^ [1]
   test.js:33:25
   33| declare var nullableX: ?Literal;
                               ^^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------------- test.js:58:24

Cannot compare string [1] with property `p` of `nullableO` [2] because string [1] is incompatible with string literal
`foo` [3]. [incompatible-type]

   test.js:58:24
   58|   if (nullableO?.p === 'bar') {} // Error
                              ^^^^^ [1]

References:
   test.js:34:13
   34| declare var nullableO: ?{p: Literal}
                   ^^^^^^^^^ [2]
   test.js:34:29
   34| declare var nullableO: ?{p: Literal}
                                   ^^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------------- test.js:59:24

Cannot compare number [1] with property `p` of `nullableO` [2] because number [1] is incompatible with string literal
`foo` [3]. [incompatible-type]

   test.js:59:24
   59|   if (nullableO?.p === 1) {} // Error
                              ^ [1]

References:
   test.js:34:13
   34| declare var nullableO: ?{p: Literal}
                   ^^^^^^^^^ [2]
   test.js:34:29
   34| declare var nullableO: ?{p: Literal}
                                   ^^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------------- test.js:64:39

Invalid check of string literal `bar` against nullable `Literal` [1] because string literal `bar` [2] is incompatible
with string literal `foo` [3]. [incompatible-type]

   test.js:64:39
   64|   if (true && (false || nullableX === 'bar')) {} // Error
                                             ^^^^^ [2]

References:
   test.js:33:24
   33| declare var nullableX: ?Literal;
                              ^^^^^^^^ [1]
   test.js:33:25
   33| declare var nullableX: ?Literal;
                               ^^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------------- test.js:65:42

Cannot compare string [1] with property `p` of `nullableO` [2] because string [1] is incompatible with string literal
`foo` [3]. [incompatible-type]

   test.js:65:42
   65|   if (true && (false || nullableO?.p === 'bar')) {} // Error
                                                ^^^^^ [1]

References:
   test.js:34:13
   34| declare var nullableO: ?{p: Literal}
                   ^^^^^^^^^ [2]
   test.js:34:29
   34| declare var nullableO: ?{p: Literal}
                                   ^^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------------- test.js:66:39

Invalid check of number literal `1` against nullable `Literal` [1] because number literal `1` [2] is incompatible with
string literal `foo` [3]. [incompatible-type]

   test.js:66:39
   66|   if (true && (false || nullableX === 1)) {} // Error
                                             ^ [2]

References:
   test.js:33:24
   33| declare var nullableX: ?Literal;
                              ^^^^^^^^ [1]
   test.js:33:25
   33| declare var nullableX: ?Literal;
                               ^^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------------- test.js:67:42

Cannot compare number [1] with property `p` of `nullableO` [2] because number [1] is incompatible with string literal
`foo` [3]. [incompatible-type]

   test.js:67:42
   67|   if (true && (false || nullableO?.p === 1)) {} // Error
                                                ^ [1]

References:
   test.js:34:13
   34| declare var nullableO: ?{p: Literal}
                   ^^^^^^^^^ [2]
   test.js:34:29
   34| declare var nullableO: ?{p: Literal}
                                   ^^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------------- test.js:72:14

Invalid check of boolean literal `false` against boolean literal `true` [1] because boolean literal `false` [2] is
incompatible with boolean literal `true` [1]. [incompatible-type]

   test.js:72:14
   72|   if (b1 === false) {} // error
                    ^^^^^ [2]

References:
   test.js:70:43
   70| function bool_literal_subtyping_check(b1: true, b2: false, b3: boolean) {
                                                 ^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:74:14

Invalid check of boolean literal `false` against boolean literal `true` [1] because boolean literal `false` [2] is
incompatible with boolean literal `true` [1]. [incompatible-type]

   test.js:74:14
   74|   if (b1 !== false) {} // error
                    ^^^^^ [2]

References:
   test.js:70:43
   70| function bool_literal_subtyping_check(b1: true, b2: false, b3: boolean) {
                                                 ^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:76:14

Invalid check of boolean literal `true` against boolean literal `false` [1] because boolean literal `true` [2] is
incompatible with boolean literal `false` [1]. [incompatible-type]

   test.js:76:14
   76|   if (b2 === true) {} // error
                    ^^^^ [2]

References:
   test.js:70:53
   70| function bool_literal_subtyping_check(b1: true, b2: false, b3: boolean) {
                                                           ^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:78:14

Invalid check of boolean literal `true` against boolean literal `false` [1] because boolean literal `true` [2] is
incompatible with boolean literal `false` [1]. [incompatible-type]

   test.js:78:14
   78|   if (b2 !== true) {} // error
                    ^^^^ [2]

References:
   test.js:70:53
   70| function bool_literal_subtyping_check(b1: true, b2: false, b3: boolean) {
                                                           ^^^^^ [1]



Found 28 errors
