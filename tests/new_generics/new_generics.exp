Error --------------------------------------------------------------------------------------------- basic_class.js:12:12

Cannot return `this.x` because `X` [1] is incompatible with `Y` [2]. [incompatible-return]

   basic_class.js:12:12
   12|     return this.x;
                  ^^^^^^

References:
   basic_class.js:4:6
    4|   x: X;
            ^ [1]
   basic_class.js:11:14
   11|   get_bad(): Y {
                    ^ [2]


Error --------------------------------------------------------------------------------------------- basic_class.js:28:14

Cannot return `this.get_bad()` because number [1] is incompatible with `X` [2]. [incompatible-return]

   basic_class.js:28:14
   28|       return this.get_bad();
                    ^^^^^^^^^^^^^^

References:
   basic_class.js:24:25
   24| class E<X> extends C<X, number> {
                               ^^^^^^ [1]
   basic_class.js:25:14
   25|   set(x: X): X {
                    ^ [2]


Error ------------------------------------------------------------------------------------------- basic_function.js:7:19

Cannot assign `x` to `z` because `X` [1] is incompatible with number [2]. [incompatible-type]

   basic_function.js:7:19
   7|   var z: number = x;
                        ^

References:
   basic_function.js:5:18
   5| function f<X>(x: X): X {
                       ^ [1]
   basic_function.js:7:10
   7|   var z: number = x;
               ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- basic_function.js:8:19

Cannot assign `y` to `w` because `X` [1] is incompatible with number [2]. [incompatible-type]

   basic_function.js:8:19
   8|   var w: number = y;
                        ^

References:
   basic_function.js:6:10
   6|   var y: X = x;
               ^ [1]
   basic_function.js:8:10
   8|   var w: number = y;
               ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ basic_function.js:10:12

Cannot return `42` because number [1] is incompatible with `X` [2]. [incompatible-return]

   basic_function.js:10:12
   10|     return 42;
                  ^^ [1]

References:
   basic_function.js:5:22
    5| function f<X>(x: X): X {
                            ^ [2]


Error ------------------------------------------------------------------------------------------ basic_function.js:20:12

Cannot return `42` because number [1] is incompatible with `X` [2]. [incompatible-return]

   basic_function.js:20:12
   20|     return 42;
                  ^^ [1]

References:
   basic_function.js:15:30
   15| function g<X: number>(x: X): X {
                                    ^ [2]


Error ---------------------------------------------------------------------------------------------- refinements.js:11:6

Cannot cast `x` to string because number [1] is incompatible with string [2]. [incompatible-cast]

   refinements.js:11:6
   11|     (x: string); // nope
            ^

References:
   refinements.js:8:7
    8|   if (typeof x === 'number') {
             ^^^^^^^^^^^^^^^^^^^^^ [1]
   refinements.js:11:9
   11|     (x: string); // nope
               ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- refinements.js:13:4

Cannot cast `x` to number because `X` [1] is incompatible with number [2]. [incompatible-cast]

   refinements.js:13:4
   13|   (x: number); // nope
          ^

References:
   refinements.js:7:18
    7| function f<X>(x: X) {
                        ^ [1]
   refinements.js:13:7
   13|   (x: number); // nope
             ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- refinements.js:18:6

Cannot cast `x` to string because `C` [1] is incompatible with string [2]. [incompatible-cast]

   refinements.js:18:6
   18|     (x: string); // nope
            ^

References:
   refinements.js:15:20
   15|   if (x instanceof C) {
                          ^ [1]
   refinements.js:18:9
   18|     (x: string); // nope
               ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- refinements.js:20:4

Cannot cast `x` to `C` because `X` [1] is incompatible with `C` [2]. [incompatible-cast]

   refinements.js:20:4
   20|   (x: C); // nope
          ^

References:
   refinements.js:7:18
    7| function f<X>(x: X) {
                        ^ [1]
   refinements.js:20:7
   20|   (x: C); // nope
             ^ [2]



Found 10 errors
