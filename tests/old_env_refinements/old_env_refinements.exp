Error -------------------------------------------------------------------------------------- func_call_recursive.js:12:4

Cannot cast `x` to number because null [1] is incompatible with number [2]. [incompatible-cast]

   func_call_recursive.js:12:4
   12|   (x: number);
          ^

References:
   func_call_recursive.js:8:7
    8|   x = null;
             ^^^^ [1]
   func_call_recursive.js:12:7
   12|   (x: number);
             ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- issue-7103.js:15:15

Cannot cast `box` to empty because object literal [1] is incompatible with empty [2]. [incompatible-cast]

   issue-7103.js:15:15
   15|       return (box: empty).value;
                     ^^^

References:
   issue-7103.js:12:13
   12|       box = { type: "BAD", value: t };
                   ^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   issue-7103.js:15:20
   15|       return (box: empty).value;
                          ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- issue-7103.js:18:13

Cannot resolve name `Error`. [cannot-resolve-name]

   18|   throw new Error("Unreachable.");
                   ^^^^^


Error ----------------------------------------------------------------------------------------------- issue-7104.js:8:25

Cannot call `Promise` because no arguments are expected by default constructor [1]. [extra-arg]

   issue-7104.js:8:25
                               v-----------
    8|   const p = new Promise(resolve => {
    9|     const intervalId = setInterval(() => {
   10|       if (sentinel.flag) {
   11|         box = { type: "BAD", value: t };
   12|         clearInterval(intervalId);
   13|         resolve();
   14|       }
   15|     }, 1);
   16|   });
         ^

References:
   <BUILTINS>/prelude.js:40:15
   40| declare class Promise<+R> {}
                     ^^^^^^^ [1]


Error ----------------------------------------------------------------------------------------------- issue-7104.js:9:24

Cannot resolve name `setInterval`. [cannot-resolve-name]

   9|     const intervalId = setInterval(() => {
                             ^^^^^^^^^^^


Error ----------------------------------------------------------------------------------------------- issue-7104.js:12:9

Cannot resolve name `clearInterval`. [cannot-resolve-name]

   12|         clearInterval(intervalId);
               ^^^^^^^^^^^^^


Error ---------------------------------------------------------------------------------------------- issue-7104.js:22:15

Cannot cast `box` to empty because object literal [1] is incompatible with empty [2]. [incompatible-cast]

   issue-7104.js:22:15
   22|       return (box: empty).value;
                     ^^^

References:
   issue-7104.js:11:15
   11|         box = { type: "BAD", value: t };
                     ^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   issue-7104.js:22:20
   22|       return (box: empty).value;
                          ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- issue-7104.js:25:13

Cannot resolve name `Error`. [cannot-resolve-name]

   25|   throw new Error("Unreachable.");
                   ^^^^^


Error ------------------------------------------------------------------------------------------------ issue-7541.js:6:7

Cannot call `[...].forEach` because property `forEach` is missing in `Array` [1]. [prop-missing]

   issue-7541.js:6:7
    6|   [1].forEach(() => {
             ^^^^^^^

References:
   <BUILTINS>/prelude.js:30:15
   30| declare class Array<T> extends $ReadOnlyArray<T> {}
                     ^^^^^ [1]


Error ---------------------------------------------------------------------------------------------- issue-7541.js:10:10

Cannot return `a` because number [1] is incompatible with string [2]. [incompatible-return]

   issue-7541.js:10:10
   10|   return a; // a is string
                ^

References:
   issue-7541.js:7:9
    7|     a = 2;
               ^ [1]
   issue-7541.js:3:20
    3| function myFunc(): string {
                          ^^^^^^ [2]



Found 10 errors
