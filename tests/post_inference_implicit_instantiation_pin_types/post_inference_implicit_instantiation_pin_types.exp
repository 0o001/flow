Error -------------------------------------------------------------------------- contravariant_class_constructor.js:2:18

T appears negatively in the polymorphic definition

   2| declare class A<-T> {
                       ^


Error --------------------------------------------------------------------------- contravariant_class_constructor.js:5:1

T is pinned to type number

   5| new A((x: number) => 'string');
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error -------------------------------------------------------------------------- contravariant_class_constructor.js:8:18

T appears negatively in the polymorphic definition

   8| declare class B<-T> {
                       ^


Error -------------------------------------------------------------------------- contravariant_class_constructor.js:11:1

T is pinned to type string & number

   11| new B((x: string) => 3, (x: number) => 'string');
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error ----------------------------------------------------------------------------------- contravariant_fun_call.js:2:20

T appears negatively in the return

   2| declare function f<T>(T => mixed): T => mixed;
                         ^


Error ------------------------------------------------------------------------------------ contravariant_fun_call.js:3:1

T is pinned to type number

   3| f((x: number) => 'string');
      ^^^^^^^^^^^^^^^^^^^^^^^^^^


Error ----------------------------------------------------------------------------------- contravariant_fun_call.js:6:20

T appears negatively in the return

   6| declare function g<T>(T => mixed, T => mixed): T => mixed;
                         ^


Error ------------------------------------------------------------------------------------ contravariant_fun_call.js:7:1

T is pinned to type string & number

   7| g((x: string) => 3, (x: number) => 'string');
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error ---------------------------------------------------------------------------- contravariant_fun_constructor.js:2:20

T appears negatively in the return

   2| declare function f<T>(T => mixed): T => mixed;
                         ^


Error ----------------------------------------------------------------------------- contravariant_fun_constructor.js:3:1

T is pinned to type number

   3| new f((x: number) => 'string');
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error ---------------------------------------------------------------------------- contravariant_fun_constructor.js:6:20

T appears negatively in the return

   6| declare function g<T>(T => mixed, T => mixed): T => mixed;
                         ^


Error ----------------------------------------------------------------------------- contravariant_fun_constructor.js:7:1

T is pinned to type string & number

   7| new g((x: string) => 3, (x: number) => 'string');
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error ------------------------------------------------------------------------------ covariant_class_constructor.js:2:18

T appears positively in the polymorphic definition

   2| declare class A<+T>{
                       ^


Error ------------------------------------------------------------------------------- covariant_class_constructor.js:5:1

T is pinned to type number

   5| new A(3);
      ^^^^^^^^


Error ------------------------------------------------------------------------------- covariant_class_constructor.js:6:1

T is pinned to type (x: number) => string

   6| new A((x: number) => 'string');
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error ------------------------------------------------------------------------------ covariant_class_constructor.js:9:18

T appears positively in the polymorphic definition

   9| declare class B<+T>{
                       ^


Error ------------------------------------------------------------------------------ covariant_class_constructor.js:12:1

T is pinned to type string | number

   12| new B(3, 'string');
       ^^^^^^^^^^^^^^^^^^


Error ------------------------------------------------------------------------------ covariant_class_constructor.js:13:1

T is pinned to type ((x: number) => string) | string

   13| new B('string', (x: number) => 'string');
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error --------------------------------------------------------------------------------------- covariant_fun_call.js:2:20

T appears positively in the return

   2| declare function f<T>(T): T;
                         ^


Error ---------------------------------------------------------------------------------------- covariant_fun_call.js:3:1

T is pinned to type number

   3| f(3);
      ^^^^


Error ---------------------------------------------------------------------------------------- covariant_fun_call.js:4:1

T is pinned to type (x: number) => string

   4| f((x: number) => 'string');
      ^^^^^^^^^^^^^^^^^^^^^^^^^^


Error --------------------------------------------------------------------------------------- covariant_fun_call.js:7:20

T appears positively in the return

   7| declare function g<T>(T, T): T;
                         ^


Error ---------------------------------------------------------------------------------------- covariant_fun_call.js:8:1

T is pinned to type string | number

   8| g(3, 'string');
      ^^^^^^^^^^^^^^


Error ---------------------------------------------------------------------------------------- covariant_fun_call.js:9:1

T is pinned to type ((x: number) => string) | string

   9| g('string', (x: number) => 'string');
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error -------------------------------------------------------------------------------- covariant_fun_constructor.js:2:20

T appears positively in the return

   2| declare function f<T>(T): T;
                         ^


Error --------------------------------------------------------------------------------- covariant_fun_constructor.js:3:1

T is pinned to type number

   3| new f(3);
      ^^^^^^^^


Error --------------------------------------------------------------------------------- covariant_fun_constructor.js:4:1

T is pinned to type (x: number) => string

   4| new f((x: number) => 'string');
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error -------------------------------------------------------------------------------- covariant_fun_constructor.js:7:20

T appears positively in the return

   7| declare function g<T>(T, T): T;
                         ^


Error --------------------------------------------------------------------------------- covariant_fun_constructor.js:8:1

T is pinned to type string | number

   8| new g(3, 'string');
      ^^^^^^^^^^^^^^^^^^


Error --------------------------------------------------------------------------------- covariant_fun_constructor.js:9:1

T is pinned to type ((x: number) => string) | string

   9| new g('string', (x: number) => 'string');
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error ------------------------------------------------------------------------------ invariant_class_constructor.js:2:17

T appears neutrally in the polymorphic definition

   2| declare class A<T>{
                      ^


Error ------------------------------------------------------------------------------- invariant_class_constructor.js:5:1

T is pinned to type number

   5| new A(3);
      ^^^^^^^^


Error ------------------------------------------------------------------------------- invariant_class_constructor.js:6:1

T is pinned to type (x: number) => string

   6| new A((x: number) => 'string');
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error --------------------------------------------------------------------------------------- invariant_fun_call.js:2:20

T appears neutrally in the return

   2| declare function f<T>(T): Array<T>;
                         ^


Error ---------------------------------------------------------------------------------------- invariant_fun_call.js:3:1

T is pinned to type number

   3| f(3);
      ^^^^


Error ---------------------------------------------------------------------------------------- invariant_fun_call.js:4:1

T is pinned to type (x: number) => string

   4| f((x: number) => 'string');
      ^^^^^^^^^^^^^^^^^^^^^^^^^^


Error -------------------------------------------------------------------------------- invariant_fun_constructor.js:2:20

T appears neutrally in the return

   2| declare function f<T>(T): Array<T>;
                         ^


Error --------------------------------------------------------------------------------- invariant_fun_constructor.js:3:1

T is pinned to type number

   3| new f(3);
      ^^^^^^^^


Error --------------------------------------------------------------------------------- invariant_fun_constructor.js:4:1

T is pinned to type (x: number) => string

   4| new f((x: number) => 'string');
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error ----------------------------------------------------------------------- underconstrained_class_constructor.js:2:17

T appears neutrally in the polymorphic definition

   2| declare class A<T>{
                      ^


Error ------------------------------------------------------------------------ underconstrained_class_constructor.js:5:1

T does not have enough information to pin down its type

   5| new A();
      ^^^^^^^


Error ----------------------------------------------------------------------- underconstrained_class_constructor.js:7:18

T appears positively in the polymorphic definition

   7| declare class B<+T>{
                       ^


Error ----------------------------------------------------------------------- underconstrained_class_constructor.js:10:1

T does not have enough information to pin down its type

   10| new B((x: number) => 'string');
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error ---------------------------------------------------------------------- underconstrained_class_constructor.js:12:18

T appears negatively in the polymorphic definition

   12| declare class C<-T>{
                        ^


Error ----------------------------------------------------------------------- underconstrained_class_constructor.js:16:1

T does not have enough information to pin down its type

   16| new C(3);
       ^^^^^^^^


Error -------------------------------------------------------------------------------- underconstrained_fun_call.js:2:20

T appears positively in the return

   2| declare function f<T>(): T;
                         ^


Error --------------------------------------------------------------------------------- underconstrained_fun_call.js:3:1

T does not have enough information to pin down its type

   3| f();
      ^^^


Error -------------------------------------------------------------------------------- underconstrained_fun_call.js:5:20

T appears positively in the return

   5| declare function g<T>(T => mixed): T;
                         ^


Error --------------------------------------------------------------------------------- underconstrained_fun_call.js:6:1

T does not have enough information to pin down its type

   6| g((x: number) => 'string');
      ^^^^^^^^^^^^^^^^^^^^^^^^^^


Error -------------------------------------------------------------------------------- underconstrained_fun_call.js:8:20

T appears negatively in the return

   8| declare function h<T>(T): T => mixed;
                         ^


Error --------------------------------------------------------------------------------- underconstrained_fun_call.js:9:1

T does not have enough information to pin down its type

   9| h(3);
      ^^^^


Error ------------------------------------------------------------------------------- underconstrained_fun_call.js:11:20

T appears neutrally in the return

   11| declare function i<T>(): Array<T>;
                          ^


Error -------------------------------------------------------------------------------- underconstrained_fun_call.js:12:1

T does not have enough information to pin down its type

   12| i();
       ^^^


Error ------------------------------------------------------------------------- underconstrained_fun_constructor.js:2:20

T appears positively in the return

   2| declare function f<T>(): T;
                         ^


Error -------------------------------------------------------------------------- underconstrained_fun_constructor.js:3:1

T does not have enough information to pin down its type

   3| new f();
      ^^^^^^^


Error ------------------------------------------------------------------------- underconstrained_fun_constructor.js:5:20

T appears positively in the return

   5| declare function g<T>(T => mixed): T;
                         ^


Error -------------------------------------------------------------------------- underconstrained_fun_constructor.js:6:1

T does not have enough information to pin down its type

   6| new g((x: number) => 'string');
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error ------------------------------------------------------------------------- underconstrained_fun_constructor.js:8:20

T appears negatively in the return

   8| declare function h<T>(T): T => mixed;
                         ^


Error -------------------------------------------------------------------------- underconstrained_fun_constructor.js:9:1

T does not have enough information to pin down its type

   9| new h(3);
      ^^^^^^^^


Error ------------------------------------------------------------------------ underconstrained_fun_constructor.js:11:20

T appears neutrally in the return

   11| declare function i<T>(): Array<T>;
                          ^


Error ------------------------------------------------------------------------- underconstrained_fun_constructor.js:12:1

T does not have enough information to pin down its type

   12| new i();
       ^^^^^^^



Found 61 errors
