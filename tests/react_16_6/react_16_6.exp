Error ---------------------------------------------------------------------------------------------------- lazy.js:12:12

Cannot create `LazyFunctionComponent` element because property `foo` is missing in props [1] but exists in `Props` [2].

   lazy.js:12:12
   12| const _b = <LazyFunctionComponent />; // Error missing foo
                  ^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   lazy.js:6:31
    6| function FunctionComponent(x: Props): React.Node { return null }
                                     ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- lazy.js:13:12

Cannot create `LazyFunctionComponent` element because property `bar` is missing in `Props` [1] but exists in props [2].

   lazy.js:13:12
   13| const _c = <LazyFunctionComponent foo={3} bar={3} />; // Error extra bar
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]

References:
   lazy.js:6:31
    6| function FunctionComponent(x: Props): React.Node { return null }
                                     ^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- lazy.js:14:12

Cannot create `LazyFunctionComponent` element because string [1] is incompatible with number [2] in property `foo`.

   lazy.js:14:12
   14| const _d = <LazyFunctionComponent foo="string" />; // Error wrong type for foo
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   lazy.js:14:39
   14| const _d = <LazyFunctionComponent foo="string" />; // Error wrong type for foo
                                             ^^^^^^^^ [1]
   lazy.js:5:22
    5| type Props = {| foo: number |};
                            ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- lazy.js:19:12

Cannot create `LazyClassComponent` element because property `foo` is missing in props [1] but exists in `Props` [2].

   lazy.js:19:12
   19| const _f = <LazyClassComponent />; // Error missing foo
                  ^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   lazy.js:7:46
    7| class ClassComponent extends React.Component<Props> {}
                                                    ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- lazy.js:20:12

Cannot create `LazyClassComponent` element because property `bar` is missing in `Props` [1] but exists in props [2].

   lazy.js:20:12
   20| const _g = <LazyClassComponent foo={3} bar={3} />; // Error extra bar
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]

References:
   lazy.js:7:46
    7| class ClassComponent extends React.Component<Props> {}
                                                    ^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- lazy.js:21:12

Cannot create `LazyClassComponent` element because string [1] is incompatible with number [2] in property `foo`.

   lazy.js:21:12
   21| const _h = <LazyClassComponent foo="string" />; // Error wrong type for foo
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   lazy.js:21:36
   21| const _h = <LazyClassComponent foo="string" />; // Error wrong type for foo
                                          ^^^^^^^^ [1]
   lazy.js:5:22
    5| type Props = {| foo: number |};
                            ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- memo.js:12:12

Cannot create `MemoComponent` element because property `foo` is missing in props [1] but exists in `Props` [2].

   memo.js:12:12
   12| const _b = <MemoComponent />; // Error missing foo
                  ^^^^^^^^^^^^^^^^^ [1]

References:
   memo.js:7:23
    7| function Component(x: Props): React.Node { return null }
                             ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- memo.js:13:12

Cannot create `MemoComponent` element because property `bar` is missing in `Props` [1] but exists in props [2].

   memo.js:13:12
   13| const _c = <MemoComponent foo={3} bar={3} />; // Error extra bar
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]

References:
   memo.js:7:23
    7| function Component(x: Props): React.Node { return null }
                             ^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- memo.js:14:12

Cannot create `MemoComponent` element because string [1] is incompatible with number [2] in property `foo`.

   memo.js:14:12
   14| const _d = <MemoComponent foo="string" />; // Error wrong type for foo
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   memo.js:14:31
   14| const _d = <MemoComponent foo="string" />; // Error wrong type for foo
                                     ^^^^^^^^ [1]
   memo.js:5:22
    5| type Props = {| foo: number |};
                            ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- memo.js:19:12

Cannot create `MemoComponent` element because property `foo` is missing in props [1] but exists in `Props` [2].

   memo.js:19:12
   19| const _f = <MemoComponent />; // Error missing foo
                  ^^^^^^^^^^^^^^^^^ [1]

References:
   memo.js:7:23
    7| function Component(x: Props): React.Node { return null }
                             ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- memo.js:20:12

Cannot create `MemoComponent` element because property `bar` is missing in `Props` [1] but exists in props [2].

   memo.js:20:12
   20| const _g = <MemoComponent foo={3} bar={3} />; // Error extra bar
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]

References:
   memo.js:7:23
    7| function Component(x: Props): React.Node { return null }
                             ^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- memo.js:21:12

Cannot create `MemoComponent` element because string [1] is incompatible with number [2] in property `foo`.

   memo.js:21:12
   21| const _h = <MemoComponent foo="string" />; // Error wrong type for foo
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   memo.js:21:31
   21| const _h = <MemoComponent foo="string" />; // Error wrong type for foo
                                     ^^^^^^^^ [1]
   memo.js:5:22
    5| type Props = {| foo: number |};
                            ^^^^^^ [2]



Found 12 errors
