Error ------------------------------------------------------------------------------------ abstract_vs_abstract.js:15:99

Property `foo` is missing in object type [1] but exists in object type [2].

   abstract_vs_abstract.js:15:99
   15| function test3(x: React$AbstractComponent<{foo: number}, {}, Component>): React$AbstractComponent<{}, {}, Component> { // Error missing props
                                                                                                         ^^ [1]

References:
   abstract_vs_abstract.js:15:43
   15| function test3(x: React$AbstractComponent<{foo: number}, {}, Component>): React$AbstractComponent<{}, {}, Component> { // Error missing props
                                                 ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------ abstract_vs_abstract.js:20:10

Cannot return `x` because property `foo` is missing in object type [1] but exists in object type [2].

   abstract_vs_abstract.js:20:10
   20|   return x;
                ^

References:
   abstract_vs_abstract.js:19:47
   19| function test4(x: React$AbstractComponent<{}, {}, Component>): React$AbstractComponent<{}, {foo: number}, Component> { // Error default props don't unify
                                                     ^^ [1]
   abstract_vs_abstract.js:19:92
   19| function test4(x: React$AbstractComponent<{}, {}, Component>): React$AbstractComponent<{}, {foo: number}, Component> { // Error default props don't unify
                                                                                                  ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------ abstract_vs_abstract.js:24:10

Cannot return `x` because property `foo` is missing in object type [1] but exists in object type [2].

   abstract_vs_abstract.js:24:10
   24|   return x;
                ^

References:
   abstract_vs_abstract.js:23:103
   23| function test5(x: React$AbstractComponent<{}, {foo: number}, Component>): React$AbstractComponent<{}, {}, Component> { // Error default props don't unify
                                                                                                             ^^ [1]
   abstract_vs_abstract.js:23:47
   23| function test5(x: React$AbstractComponent<{}, {foo: number}, Component>): React$AbstractComponent<{}, {}, Component> { // Error default props don't unify
                                                     ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------ abstract_vs_abstract.js:27:51

`Component` [1] is incompatible with `Subcomponent` [2].

   abstract_vs_abstract.js:27:51
   27| function test6(x: React$AbstractComponent<{}, {}, Component>): React$AbstractComponent<{}, {}, Subcomponent> { // Error instance is covariant
                                                         ^^^^^^^^^ [1]

References:
   abstract_vs_abstract.js:27:96
   27| function test6(x: React$AbstractComponent<{}, {}, Component>): React$AbstractComponent<{}, {}, Subcomponent> { // Error instance is covariant
                                                                                                      ^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- arity.js:3:19

Cannot use type without exactly 3 type arguments.

   3| function test1(x: React$AbstractComponent<any>) { // Not enough targs
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error ---------------------------------------------------------------------------------------------------- arity.js:7:19

Cannot use type without exactly 3 type arguments.

   7| function test2(x: React$AbstractComponent<any,any>) { // Not enough targs
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error --------------------------------------------------------------------------------------------------- arity.js:11:19

Cannot use type without exactly 3 type arguments.

   11| function test3(x: React$AbstractComponent<any,any,any,any>) { // Too many targs
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error --------------------------------------------------------------------------------------------- classes_lower.js:5:7

`Component` [1] is incompatible with `Subclass` [2].

   classes_lower.js:5:7
    5| class Component extends React.Component<{}> {}
             ^^^^^^^^^ [1]

References:
   classes_lower.js:30:47
   30| (Component: React$AbstractComponent<any, any, Subclass>); // Ok, Instance is covariant
                                                     ^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- classes_lower.js:10:42

object type [1] is incompatible with default props of React component [2].

   classes_lower.js:10:42
   10| (Component: React$AbstractComponent<any, {}, any>); // Error no defaults
                                                ^^ [1]

References:
   classes_lower.js:10:2
   10| (Component: React$AbstractComponent<any, {}, any>); // Error no defaults
        ^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- classes_lower.js:11:2

Inexact default props of React component [1] is incompatible with exact object type [2].

   classes_lower.js:11:2
   11| (Component: React$AbstractComponent<any, {| foo: number |}, any>); // Error extra default props
        ^^^^^^^^^ [1]

References:
   classes_lower.js:11:42
   11| (Component: React$AbstractComponent<any, {| foo: number |}, any>); // Error extra default props
                                                ^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- classes_lower.js:11:42

object type [1] is incompatible with default props of React component [2].

   classes_lower.js:11:42
   11| (Component: React$AbstractComponent<any, {| foo: number |}, any>); // Error extra default props
                                                ^^^^^^^^^^^^^^^^^ [1]

References:
   classes_lower.js:11:2
   11| (Component: React$AbstractComponent<any, {| foo: number |}, any>); // Error extra default props
        ^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- classes_lower.js:13:7

`ComponentNarrower` [1] is incompatible with `Component` [2].

   classes_lower.js:13:7
   13| class ComponentNarrower extends React.Component<{foo: number, bar: number}> {
             ^^^^^^^^^^^^^^^^^ [1]

References:
   classes_lower.js:22:55
   22| (ComponentNarrower: React$AbstractComponent<any, any, Component>); // Error instance type is wrong
                                                             ^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- classes_lower.js:14:24

Inexact object type [1] is incompatible with exact object type [2].

   classes_lower.js:14:24
   14|   static defaultProps: { foo: number } = {foo: 3};
                              ^^^^^^^^^^^^^^^ [1]

References:
   classes_lower.js:19:76
   19| (ComponentNarrower: React$AbstractComponent<{+foo?: number, +bar: number}, {|foo: number|}, any>); // Error inexact vs exact
                                                                                  ^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- classes_lower.js:14:24

Property `bar` is missing in object type [1] but exists in object type [2].

   classes_lower.js:14:24
   14|   static defaultProps: { foo: number } = {foo: 3};
                              ^^^^^^^^^^^^^^^ [1]

References:
   classes_lower.js:25:50
   25| (ComponentNarrower: React$AbstractComponent<any, { foo: number, bar: number }, any>); // Error, bar is not in default config
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- classes_lower.js:20:45

Property `bar` is missing in object type [1] but exists in object type [2].

   classes_lower.js:20:45
   20| (ComponentNarrower: React$AbstractComponent<{}, any, any>); // Error missing foo and bar in config
                                                   ^^ [1]

References:
   classes_lower.js:13:49
   13| class ComponentNarrower extends React.Component<{foo: number, bar: number}> {
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- classes_lower.js:20:45

Property `foo` is missing in object type [1] but exists in object type [2].

   classes_lower.js:20:45
   20| (ComponentNarrower: React$AbstractComponent<{}, any, any>); // Error missing foo and bar in config
                                                   ^^ [1]

References:
   classes_lower.js:13:49
   13| class ComponentNarrower extends React.Component<{foo: number, bar: number}> {
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- classes_lower.js:21:45

Property `bar` is missing in object type [1] but exists in object type [2].

   classes_lower.js:21:45
   21| (ComponentNarrower: React$AbstractComponent<{+foo?: number}, any, any>); // Error missing bar in config
                                                   ^^^^^^^^^^^^^^^ [1]

References:
   classes_lower.js:13:49
   13| class ComponentNarrower extends React.Component<{foo: number, bar: number}> {
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- classes_lower.js:24:50

Property `foo` is missing in object type [1] but exists in object type [2].

   classes_lower.js:24:50
   24| (ComponentNarrower: React$AbstractComponent<any, {}, any>); // Error, missing foo in default config
                                                        ^^ [1]

References:
   classes_lower.js:14:24
   14|   static defaultProps: { foo: number } = {foo: 3};
                              ^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- destructors.js:14:2

Cannot cast `3` to `React.ElementRef` because number [1] is incompatible with undefined [2].

   destructors.js:14:2
   14| (3 : React$ElementRef<typeof C>); // Error, 3 is not void.
        ^ [1]

References:
   destructors.js:5:84
    5| declare var C: React$AbstractComponent<{foo?: number, bar: number}, {foo: number}, void>;
                                                                                          ^^^^ [2]


Error ---------------------------------------------------------------------------------------------- destructors.js:21:2

Cannot cast object literal to `React.ElementConfig` because property `bar` is missing in object literal [1] but exists
in object type [2].

   destructors.js:21:2
   21| ({}: React$ElementConfig<typeof C>); // Error, bar missing
        ^^ [1]

References:
   destructors.js:5:40
    5| declare var C: React$AbstractComponent<{foo?: number, bar: number}, {foo: number}, void>;
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- function_lower.js:7:37

Property `foo` is missing in object type [1] but exists in `Props` [2].

   function_lower.js:7:37
   7| (Component: React$AbstractComponent<{}, void, void>); // Error, missing foo
                                          ^^ [1]

References:
   function_lower.js:4:23
   4| function Component(x: Props): React$Node { return null; }
                            ^^^^^ [2]


Error ------------------------------------------------------------------------------------------- function_lower.js:9:44

object type [1] is incompatible with default props of React component [2].

   function_lower.js:9:44
   9| (Component: React$AbstractComponent<Props, {foo: number}, void>); // Error, default props don't unify
                                                 ^^^^^^^^^^^^^ [1]

References:
   function_lower.js:9:2
   9| (Component: React$AbstractComponent<Props, {foo: number}, void>); // Error, default props don't unify
       ^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- function_lower.js:11:2

undefined [1] is incompatible with number [2].

   function_lower.js:11:2
   11| (Component: React$AbstractComponent<Props, void, number>); // Error void ~> number
        ^^^^^^^^^ [1]

References:
   function_lower.js:11:50
   11| (Component: React$AbstractComponent<Props, void, number>); // Error void ~> number
                                                        ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ function_lower.js:18:62

Property `bar` is missing in object type [1] but exists in object type [2].

   function_lower.js:18:62
   18| (ComponentWithDefaultProps: React$AbstractComponent<Config2, {foo: number}, void>);
                                                                    ^^^^^^^^^^^^^ [1]

References:
   function_lower.js:21:62
   21| (ComponentWithDefaultProps: React$AbstractComponent<Config2, {foo: number, bar: number}, void>); // Error, default props don't unify
                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ function_lower.js:19:53

Property `bar` is missing in object type [1] but exists in `Props2` [2].

   function_lower.js:19:53
   19| (ComponentWithDefaultProps: React$AbstractComponent<{}, {foo: number}, void>); // Error, missing foo and bar
                                                           ^^ [1]

References:
   function_lower.js:15:39
   15| function ComponentWithDefaultProps(x: Props2) { return null; }
                                             ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ function_lower.js:19:53

Property `foo` is missing in object type [1] but exists in `Props2` [2].

   function_lower.js:19:53
   19| (ComponentWithDefaultProps: React$AbstractComponent<{}, {foo: number}, void>); // Error, missing foo and bar
                                                           ^^ [1]

References:
   function_lower.js:15:39
   15| function ComponentWithDefaultProps(x: Props2) { return null; }
                                             ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ function_lower.js:20:62

Property `foo` is missing in object type [1] but exists in object type [2].

   function_lower.js:20:62
   20| (ComponentWithDefaultProps: React$AbstractComponent<Config2, {}, void>); // Error, default props don't unify
                                                                    ^^ [1]

References:
   function_lower.js:18:62
   18| (ComponentWithDefaultProps: React$AbstractComponent<Config2, {foo: number}, void>);
                                                                    ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- function_lower.js:23:2

undefined [1] is incompatible with number [2].

   function_lower.js:23:2
   23| (ComponentWithDefaultProps: React$AbstractComponent<Config2, {foo: number}, number>); // Error, void ~> number
        ^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   function_lower.js:23:77
   23| (ComponentWithDefaultProps: React$AbstractComponent<Config2, {foo: number}, number>); // Error, void ~> number
                                                                                   ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- function_lower.js:25:7

Cannot assign class `NotAComponent` to `NotAComponent` because:
 - Either inexact class `NotAComponent` [1] is incompatible with exact `React.Element` [2].
 - Or class `NotAComponent` [1] is incompatible with `React.Portal` [3].
 - Or property `@@iterator` is missing in class `NotAComponent` [1] but exists in `$Iterable` [4].

   function_lower.js:25:7
   25| class NotAComponent {}; // Error, not a component
             ^^^^^^^^^^^^^ [1]

References:
   <BUILTINS>/react.js:18:5
   18|   | React$Element<any>
           ^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:19:5
   19|   | React$Portal
           ^^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:20:5
   20|   | Iterable<?React$Node>;
           ^^^^^^^^^^^^^^^^^^^^^ [4]


Error --------------------------------------------------------------------------------------------- get_set_props.js:8:3

Cannot call `x.displayName.toString` because:
 - property `toString` is missing in null or undefined [1].
 - property `toString` is missing in undefined [1].
 - property `toString` is missing in null [2].

   get_set_props.js:8:3
     8|   x.displayName.toString(); // Error maybe null or undefined
          ^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:134:17
   134|   displayName?: ?string,
                        ^^^^^^^ [1]
   get_set_props.js:6:21
     6|     x.displayName = null;
                            ^^^^ [2]


Error --------------------------------------------------------------------------------------------- get_set_props.js:9:3

Cannot get `x.definitelyNotHere` because property `definitelyNotHere` is missing in
`React.AbstractComponentStatics` [1].

   get_set_props.js:9:3
     9|   x.definitelyNotHere.toString(); // Error missing prop
          ^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:132:61
                                                                    v
   132| declare type React$AbstractComponentStatics<DefaultProps> = {
   133|   defaultProps: DefaultProps,
   134|   displayName?: ?string,
   135|   // This is only on function components, but trying to access name when
   136|   // displayName is undefined is a common pattern.
   137|   name?: ?string,
   138| };
        ^ [1]


Error ------------------------------------------------------------------------------------------- get_set_props.js:11:19

Cannot assign `3` to `x.displayName` because number [1] is incompatible with string [2].

   get_set_props.js:11:19
    11|   x.displayName = 3; // Error num ~> string
                          ^ [1]

References:
   <BUILTINS>/react.js:134:18
   134|   displayName?: ?string,
                         ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- test_prop.js:5:7

Property `notOnEitherSFCOrClass` is missing in `React.AbstractComponentStatics` [1].

   test_prop.js:5:7
     5|   if (x.notOnEitherSFCOrClass) {} // Error Not on any component
              ^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:132:61
                                                                    v
   132| declare type React$AbstractComponentStatics<DefaultProps> = {
   133|   defaultProps: DefaultProps,
   134|   displayName?: ?string,
   135|   // This is only on function components, but trying to access name when
   136|   // displayName is undefined is a common pattern.
   137|   name?: ?string,
   138| };
        ^ [1]



Found 35 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
