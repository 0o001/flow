Error ------------------------------------------------------------------------------------------------ abnormal.js:14:33

Unreachable code. [unreachable-code]

   14| const unreachableFunctionDef1 = function named() {} // Only expect unreachable error here
                                       ^^^^^^^^^^^^^^^^^^^


Error ------------------------------------------------------------------------------------------------ abnormal.js:15:33

Unreachable code. [unreachable-code]

   15| const unreachableFunctionDef2 = function () {} // Only expect unreachable error here
                                       ^^^^^^^^^^^^^^


Error ---------------------------------------------------------------------------------------------------- enums.js:4:17

Enum `A` is not an iterable. You can use `A.members()` to get an iterator for the enum's members. [not-iterable]

   4| for (const x of A) {} // Error: not iterable, but there should be no enforcement errors
                      ^


Error ---------------------------------------------------------------------------------------------------- enums.js:6:10

Cannot use `Foo` as a type. Enum members are not separate types. Only the enum itself, `A` [1], is a type.
[enum-value-as-type]

   enums.js:6:10
   6| const a: A.Foo = A.Foo; // Error: enum-value-as-type
               ^^^^^

References:
   enums.js:3:6
   3| enum A { Foo, Bar }
           ^ [1]


Error --------------------------------------------------------------------------------- illegal_function_binding.js:4:10

Cannot declare `a` [1] because the name is already bound. [name-already-bound]

   illegal_function_binding.js:4:10
   4| function a() {} // error: illegal binding
               ^

References:
   illegal_function_binding.js:3:10
   3| function a() {}
               ^ [1]


Error ---------------------------------------------------------------------------------- illegal_function_binding.js:7:7

Cannot declare `b` [1] because the name is already bound. [name-already-bound]

   illegal_function_binding.js:7:7
   7| const b = () => {} // error: illegal binding
            ^

References:
   illegal_function_binding.js:6:7
   6| const b = () => {}
            ^ [1]


Error --------------------------------------------------------------------------------- illegal_function_binding.js:10:7

Cannot declare `c` [1] because the name is already bound. [name-already-bound]

   illegal_function_binding.js:10:7
   10| const c = function () {} // error: illegal binding
             ^

References:
   illegal_function_binding.js:9:7
    9| const c = function () {}
             ^ [1]


Error ----------------------------------------------------------------------------------------- regression_tests.js:11:8

Cannot declare `A` [1] because the name is already bound. [name-already-bound]

   regression_tests.js:11:8
   11|   type A = number; // error, but no MissingEnvEntry internal error.
              ^

References:
   regression_tests.js:10:8
   10|   type A = number;
              ^ [1]


Error ---------------------------------------------------------------------------------------- regression_tests.js:21:17

Missing an annotation on return. [missing-local-annot]

   21|   constructor () {
                       


Error ----------------------------------------------------------------------------------------- regression_tests.js:24:3

Missing an annotation on property `a`. [missing-local-annot]

   24|   a;
         ^^


Error ----------------------------------------------------------------------------------------- regression_tests.js:27:4

Missing an annotation on property `d`. [missing-local-annot]

   27|   d = 42 + 42;
          


Error ---------------------------------------------------------------------------------------- regression_tests.js:30:18

Missing an annotation on return. [missing-local-annot]

   30|   g = (x: number) => { return 42 }
                        


Error ----------------------------------------------------------------------------------------- regression_tests.js:33:6

Missing an annotation on return. [missing-local-annot]

   33|   j() { return 42 }
            


Error ---------------------------------------------------------------------------------------- regression_tests.js:44:24

Missing an annotation on `x`. [missing-local-annot]

   44| function UnannotParams(x, {a, b}, ...y) { }
                              ^


Error ---------------------------------------------------------------------------------------- regression_tests.js:44:27

Missing an annotation on destructuring. [missing-local-annot]

   44| function UnannotParams(x, {a, b}, ...y) { }
                                 ^^^^^^


Error ---------------------------------------------------------------------------------------- regression_tests.js:44:38

Missing an annotation on rest parameter `y`. [missing-local-annot]

   44| function UnannotParams(x, {a, b}, ...y) { }
                                            ^


Error ---------------------------------------------------------------------------------------- regression_tests.js:54:14

Cannot cast `42` to empty because string [1] is incompatible with empty [2]. [incompatible-cast]

   regression_tests.js:54:14
   54| (((42: any): ModScope): empty); // string ~> empty, not num ~> empty
                    ^^^^^^^^ [1]

References:
   regression_tests.js:54:25
   54| (((42: any): ModScope): empty); // string ~> empty, not num ~> empty
                               ^^^^^ [2]


Error ---------------------------------------------------------------------------------------- regression_tests.js:61:30

Cannot resolve name `ModScope2`. [cannot-resolve-name]

   61| declare var NonexistentType: ModScope2;
                                    ^^^^^^^^^


Error ---------------------------------------------------------------------------------------- regression_tests.js:64:23

string [1] is not a number. [incompatible-use]

   regression_tests.js:64:23
   64| const ResultOfError = -AString;
                             ^^^^^^^^

References:
   regression_tests.js:63:22
   63| declare var AString: string;
                            ^^^^^^ [1]


Error ---------------------------------------------------------------------------------------- regression_tests.js:78:30

Cannot call `inexactSpread` because Flow cannot determine a type for object type [1]. object type [2] is inexact, so it
may contain `bar` with a type that conflicts with `bar`'s definition in object type [1]. Try making object type [2]
exact. [cannot-spread-inexact]

   regression_tests.js:78:30
   78|   const inexact_spread_err = inexactSpread(inexact);
                                    ^^^^^^^^^^^^^

References:
   regression_tests.js:77:44
   77|   declare function inexactSpread<T>(x: T): {bar: 3, ...T};
                                                  ^^^^^^^^^^^^^^ [1]
   regression_tests.js:75:28
   75|   let inexact = ({foo: 3}: {foo: number, ...});
                                  ^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- regression_tests.js:90:18

Cannot use `MyClass` [1] without 1 type argument. [missing-type-arg]

   regression_tests.js:90:18
   90|   declare var c: MyClass;
                        ^^^^^^^

References:
   regression_tests.js:87:16
   87|   class MyClass<T> {
                      ^^^ [1]


Error --------------------------------------------------------------------------------------- regression_tests.js:100:23

Missing an annotation on implicit `this` parameter of function. [missing-this-annot]

   100|   let foo3 = function () { this; }; // error: missing annot on this
                              ^^


Error ---------------------------------------------------------------------------------------- regression_tests.js:108:7

Cannot assign `3` to `1.toString` because property `toString` is missing in number [1]. [incompatible-use]

   regression_tests.js:108:7
   108|   (1).toString = 3; // error: toString missing in number, but no missing env entry error
              ^^^^^^^^

References:
   regression_tests.js:108:4
   108|   (1).toString = 3; // error: toString missing in number, but no missing env entry error
           ^ [1]


Error --------------------------------------------------------------------------------------- regression_tests.js:118:19

Cannot assign function to `x` because function [1] is incompatible with number [2]. [incompatible-type]

   regression_tests.js:118:19
   118|   var x: number = (x) => x;
                          ^^^^^^^^ [1]

References:
   regression_tests.js:118:10
   118|   var x: number = (x) => x;
                 ^^^^^^ [2]



Found 24 errors
