Error -------------------------------------------------------------------------------- import_star_default_access.js:5:1

The default export of a module cannot be accessed from an `import *` [1] object. To use the default export you must
import it directly. [default-import-access]

   import_star_default_access.js:5:1
   5| Foo.default;
      ^^^^^^^^^^^

References:
   import_star_default_access.js:3:8
   3| import * as Foo from './foo';
             ^^^^^^^^ [1]


Error -------------------------------------------------------------------------------- import_star_default_access.js:6:1

The default export of a module cannot be accessed from an `import *` [1] object. To use the default export you must
import it directly. [default-import-access]

   import_star_default_access.js:6:1
   6| Foo['default'];
      ^^^^^^^^^^^^^^

References:
   import_star_default_access.js:3:8
   3| import * as Foo from './foo';
             ^^^^^^^^ [1]


Error -------------------------------------------------------------------------------- import_star_default_access.js:8:8

The default export of a module cannot be accessed from an `import *` [1] object. To use the default export you must
import it directly. [default-import-access]

   import_star_default_access.js:8:8
   8| const {default: renamed1} = Foo;
             ^^^^^^^

References:
   import_star_default_access.js:3:8
   3| import * as Foo from './foo';
             ^^^^^^^^ [1]


Error -------------------------------------------------------------------------------- import_star_default_access.js:9:8

The default export of a module cannot be accessed from an `import *` [1] object. To use the default export you must
import it directly. [default-import-access]

   import_star_default_access.js:9:8
   9| const {'default': renamed2} = Foo;
             ^^^^^^^^^

References:
   import_star_default_access.js:3:8
   3| import * as Foo from './foo';
             ^^^^^^^^ [1]


Error ------------------------------------------------------------------------------- import_star_default_access.js:12:3

The default export of a module cannot be accessed from an `import *` [1] object. To use the default export you must
import it directly. [default-import-access]

   import_star_default_access.js:12:3
   12| ({default: x}) = Foo;
         ^^^^^^^

References:
   import_star_default_access.js:3:8
    3| import * as Foo from './foo';
              ^^^^^^^^ [1]


Error ------------------------------------------------------------------------------- import_star_default_access.js:13:3

The default export of a module cannot be accessed from an `import *` [1] object. To use the default export you must
import it directly. [default-import-access]

   import_star_default_access.js:13:3
   13| ({'default': x}) = Foo;
         ^^^^^^^^^

References:
   import_star_default_access.js:3:8
    3| import * as Foo from './foo';
              ^^^^^^^^ [1]


Error ------------------------------------------------------------------------------- import_star_default_access.js:15:9

The default export of a module cannot be accessed from import destructuring. To use the default export you must import
it directly. [default-import-access]

   15| import {default as renamed3} from './foo';
               ^^^^^^^


Error ----------------------------------------------------------------------------------- import_star_invalid_use.js:7:1

`import *` [1] object can only be used by accessing one of its named exports with a member access or destructuring.
[invalid-import-star-use]

   import_star_invalid_use.js:7:1
   7| Foo;
      ^^^

References:
   import_star_invalid_use.js:3:8
   3| import * as Foo from './foo';
             ^^^^^^^^ [1]


Error ----------------------------------------------------------------------------------- import_star_invalid_use.js:8:1

`import *` [1] object can only be used by accessing one of its named exports with a member access or destructuring.
[invalid-import-star-use]

   import_star_invalid_use.js:8:1
   8| Foo();
      ^^^

References:
   import_star_invalid_use.js:3:8
   3| import * as Foo from './foo';
             ^^^^^^^^ [1]


Error ----------------------------------------------------------------------------------- import_star_invalid_use.js:8:1

Cannot call `Foo` because a call signature declaring the expected parameter / return type is missing in module
`./foo` [1]. [prop-missing]

   import_star_invalid_use.js:8:1
   8| Foo();
      ^^^

References:
   import_star_invalid_use.js:3:1
   3| import * as Foo from './foo';
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------- import_star_invalid_use.js:9:14

`import *` [1] object can only be used by accessing one of its named exports with a member access or destructuring.
[invalid-import-star-use]

   import_star_invalid_use.js:9:14
   9| const Foo2 = Foo;
                   ^^^

References:
   import_star_invalid_use.js:3:8
   3| import * as Foo from './foo';
             ^^^^^^^^ [1]


Error --------------------------------------------------------------------------------- import_star_invalid_use.js:10:11

Cannot use `Foo` as a type. A name can be used as a type only if it refers to a type, interface, class, or enum
definition. To get the type of a non-class value, use `typeof`. [value-as-type]

   10| let Foo3: Foo;
                 ^^^


Error --------------------------------------------------------------------------------- import_star_invalid_use.js:10:11

`import *` [1] object can only be used by accessing one of its named exports with a member access or destructuring.
[invalid-import-star-use]

   import_star_invalid_use.js:10:11
   10| let Foo3: Foo;
                 ^^^

References:
   import_star_invalid_use.js:3:8
    3| import * as Foo from './foo';
              ^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------- import_star_invalid_use.js:11:2

Cannot create `Foo` element because module `./foo` [1] is not a React component. [not-a-component]

   import_star_invalid_use.js:11:2
   11| <Foo></Foo>;
        ^^^

References:
   import_star_invalid_use.js:3:1
    3| import * as Foo from './foo';
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------- import_star_invalid_use.js:11:2

`import *` [1] object can only be used by accessing one of its named exports with a member access or destructuring.
[invalid-import-star-use]

   import_star_invalid_use.js:11:2
   11| <Foo></Foo>;
        ^^^

References:
   import_star_invalid_use.js:3:8
    3| import * as Foo from './foo';
              ^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------- import_star_invalid_use.js:15:1

`import *` [1] object can only be used by accessing one of its named exports with a member access or destructuring.
[invalid-import-star-use]

   import_star_invalid_use.js:15:1
   15| Foo[prop];
       ^^^

References:
   import_star_invalid_use.js:3:8
    3| import * as Foo from './foo';
              ^^^^^^^^ [1]


Error --------------------------------------------------------------------------------- import_star_invalid_use.js:29:12

`import *` [1] object can only be used by accessing one of its named exports with a member access or destructuring.
[invalid-import-star-use]

   import_star_invalid_use.js:29:12
   29| const {y = Foo} = Foo;
                  ^^^

References:
   import_star_invalid_use.js:3:8
    3| import * as Foo from './foo';
              ^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------ non-const-export.js:7:8

Cannot export variable declared using `var` or `let`. All exported variables must be `const`. [non-const-var-export]

   7| export let test2: number = 2;
             ^^^^^^^^^^^^^^^^^^^^^^


Error ------------------------------------------------------------------------------------------ non-const-export.js:8:8

Cannot export variable declared using `var` or `let`. All exported variables must be `const`. [non-const-var-export]

   8| export var test3: number = 3;
             ^^^^^^^^^^^^^^^^^^^^^^


Error ---------------------------------------------------------------------------------------- non-const-export.js:15:19

Cannot export variable `letVar` [1] declared using `var` or `let`. All exported variables must be `const`.
[non-const-var-export]

   non-const-export.js:15:19
   15| export {constVar, letVar, varVar};
                         ^^^^^^

References:
   non-const-export.js:12:1
   12| let letVar: number = 2;
       ^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------- non-const-export.js:15:27

Cannot export variable `varVar` [1] declared using `var` or `let`. All exported variables must be `const`.
[non-const-var-export]

   non-const-export.js:15:27
   15| export {constVar, letVar, varVar};
                                 ^^^^^^

References:
   non-const-export.js:13:1
   13| var varVar: number = 3;
       ^^^^^^^^^^^^^^^^^^^^^^^ [1]



Found 21 errors
