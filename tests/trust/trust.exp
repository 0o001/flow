Error ---------------------------------------------------------------------------------------------------- basic.js:2:28

Cannot assign `42` to `x` because explicit 'any' [1] is incompatible with number [2].

   basic.js:2:28
   2| var x: $Trusted<number> = (42: any); //Fail
                                 ^^^^^^^

References:
   basic.js:2:32
   2| var x: $Trusted<number> = (42: any); //Fail
                                     ^^^ [1]
   basic.js:2:17
   2| var x: $Trusted<number> = (42: any); //Fail
                      ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- basic.js:6:50

Cannot return `x` because number [1] is incompatible with number [2].

   basic.js:6:50
   6| function f(x: number): $Trusted<number> { return x; } // Fail
                                                       ^

References:
   basic.js:6:15
   6| function f(x: number): $Trusted<number> { return x; } // Fail
                    ^^^^^^ [1]
   basic.js:6:33
   6| function f(x: number): $Trusted<number> { return x; } // Fail
                                      ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- basic.js:17:27

Cannot assign `b` to `k` because number [1] is incompatible with number [2].

   basic.js:17:27
   17| var k: $Trusted<number> = b; // fail
                                 ^

References:
   basic.js:13:8
   13| var b: number = 42; // ok
              ^^^^^^ [1]
   basic.js:17:17
   17| var k: $Trusted<number> = b; // fail
                       ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- basic.js:24:27

Cannot assign `d` to `e` because explicit 'any' [1] is incompatible with number [2].

   basic.js:24:27
   24| var e: $Trusted<number> = d; // fail
                                 ^

References:
   basic.js:23:15
   23| d = ('Hello': any) // ok
                     ^^^ [1]
   basic.js:24:17
   24| var e: $Trusted<number> = d; // fail
                       ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- function_types.js:6:26

Cannot assign `a` to `b` because number [1] is incompatible with explicit 'any' [2] in the first argument.

   function_types.js:6:26
   6| var b: (any => number) = a; //fail
                               ^

References:
   function_types.js:5:18
   5| var a: ($Trusted<number> => number) = f;
                       ^^^^^^ [1]
   function_types.js:6:9
   6| var b: (any => number) = a; //fail
              ^^^ [2]


Error ------------------------------------------------------------------------------------------- function_types.js:7:28

Cannot assign `a` to `c` because number [1] is incompatible with number [2] in the first argument.

   function_types.js:7:28
   7| var c: (number=> number) = a; // fails
                                 ^

References:
   function_types.js:5:18
   5| var a: ($Trusted<number> => number) = f;
                       ^^^^^^ [1]
   function_types.js:7:9
   7| var c: (number=> number) = a; // fails
              ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- function_types.js:9:14

Cannot assign `a` to `e` because explicit 'any' [1] is incompatible with number [2].

   function_types.js:9:14
   9| var e: any = a; //fail
                   ^

References:
   function_types.js:9:8
   9| var e: any = a; //fail
             ^^^ [1]
   function_types.js:5:18
   5| var a: ($Trusted<number> => number) = f;
                       ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ function_types.js:10:49

Cannot assign `a` to `h` because number [1] is incompatible with number [2] in the return value.

   function_types.js:10:49
   10| var h: ($Trusted<number> => $Trusted<number>) = a;
                                                       ^

References:
   function_types.js:5:29
    5| var a: ($Trusted<number> => number) = f;
                                   ^^^^^^ [1]
   function_types.js:10:38
   10| var h: ($Trusted<number> => $Trusted<number>) = a;
                                            ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- syntax.js:5:16

Not a valid type to mark as `$Trusted`.

   5| declare var y: $Trusted<any>;
                     ^^^^^^^^^^^^^


Error --------------------------------------------------------------------------------------------------- syntax.js:7:16

Not a valid type to mark as `$Trusted`.

   7| declare var z: $Trusted<T>
                     ^^^^^^^^^^^



Found 10 errors
